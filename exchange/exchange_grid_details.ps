%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%DocumentNeedsFonts: (atend)
%%DocumentSuppliedFonts: (atend)
%%Creator: Frame 5.5
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.5, for use with Adobe Unix Frame 5.5 products
%
% This ps_prolog file is Copyright (c) 1986-1996 Adobe Systems, Incoporated.
% All rights reserved.  This ps_prolog file may be freely copied and 
% distributed in conjunction with documents created using FrameMaker, 
% FrameMaker+SGML, FrameReader, and FrameViewer as long as this 
% copyright notice is preserved.
/FMDocSave save def
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.5) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	2 copy exch = = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Adobe Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsetsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orghalftone
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
	/tintGray
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known systemdict /currentdistillerparams known and {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
%     
% Procedure /FmPA defines named destinations. 
% In order to accommodate all possible scenarios, FrameMaker defines named destinations
% for each paragraph, which allows links to arbitrary points in already generated
% PDF documents. This feature may cause larger PDF files to be created. 
% The fmCG flag tells Distiller whether to create named destinations for each 
% paragraph. This prolog defines two versions of this flag. One of these versions must be
% commented out, and the other must be uncommented.
%     
% The following fmCG flag will cause Distiller to create a named destination for
% each paragraph. 
%     
/fmCG { false } FmBD
%     
% The following fmCG flag will cause Distiller to create a named destination only
% for each paragraph known to be a destination. If you do not want Distiller to create
% named destinations for each paragraph (thus creating smaller sized PDF documents), 
% uncomment the following statement and comment out the previous statement. 
% CAUTION: By making the following statement active, you may lose some links in the
%          resulting PDF documents.
%     
%%/fmCG { dup 127 string cvs 0 get (G) 0 get eq } FmBD 
% 
	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD
	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
		/FmND {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
	/FmND {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix defaultmatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 1] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/tintCMYK {
	1 tintGray sub FrameCurColors 0 4 getinterval aload pop 	
	4 index mul 5 1 roll										
	3 index mul 5 1 roll										
	2 index mul 5 1 roll										
	mul 4 1 roll												
}bind def
/tintRGB {
	1 tintGray sub FrameCurColors 4 3 getinterval aload pop 	
	1 exch sub 3 index mul 1 exch sub 4 1 roll					
	1 exch sub 2 index mul 1 exch sub 4 1 roll					
	1 exch sub mul 1 exch sub 3 1 roll							
}bind def
/combineColor {
	/tintGray 1 1 FrameCurGray sub FrameCurColors 7 get mul sub def
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			tintCMYK FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				tintGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					tintCMYK
					RealSetcmykcolor
				} {
					tintRGB
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ tintGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{tintGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop tintGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop tintGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop tintGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix defaultmatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix defaultmatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	fMLevel1 {
		FMPColor {
			orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
		}
		{
			orgxfer cvx settransfer
		} ifelse
		orgfreq organgle orgproc cvx setscreen
	} {
		orghalftone sethalftone
	}ifelse
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	dup 1 gt {/#copies exch def} {pop} ifelse
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	fMLevel1 not {
		/orghalftone currenthalftone def
	}if 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMENDDOCUMENT {
	FMDocSave restore	
} def
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature: *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	
	mark
	statusdict begin 
		/setpageparams where {
			pop
			paperwidth paperheight 0 1 
			{setpageparams} stopped 
		} { 
			true 
		} ifelse
		
		{
			
			/setpagedevice where {
				pop 
				1 dict dup begin
					/PageSize [ paperwidth paperheight ] def
				end 
				{setpagedevice} stopped
			} {
				true	
			} ifelse
		} {
			false		
		} ifelse 
	end
	{cleartomark true}{cleartomark false}ifelse
} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		8 1 roll
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
		8 -1 roll
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add dup 0 ne {div} {pop pop .5} ifelse fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	[FMsetsize 0 0 FMpointsize 0 0] makefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	/FMsetsize FMpointsize def
	F 
	} bind def
/QQ { 
	/FMsetsize exch def
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	2 copy 0.0 0.0 1.0 5 3 roll arc 
	round cvi 360 mod exch round cvi 360 mod eq {closepath} if 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.5) FMVERSION
1 1 0 0 612 792 0 1 5 FMDOCUMENT
%%IncludeFont: Times-Roman
0 0 /Times-Roman FMFONTDEFINE
%%IncludeFont: Helvetica-Oblique
1 0 /Helvetica-Oblique FMFONTDEFINE
%%IncludeFont: Helvetica-Narrow-Oblique
2 0 /Helvetica-Narrow-Oblique FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
[
/Creator (FrameMaker 5.5.6.)
/Title (exchange_grid_details)
/CreationDate (D:20010307083113)
/ModDate (D:20010308091935)
/DOCINFO FmPD2
FrameNoSep
0 0 0 1 0 0 0 1 K
J
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 1) 396 36 T
0 1 1 0 1 0 0 1 K
1 12 Q
(subroutine put_e) 72 698 T
(xchange_g) 161.03 698 T
(r) 219.61 698 T
(id_3d\050model_data, e) 223.79 698 T
(x_data, bd_map) 332.82 698 T
(, a) 418.45 698 T
(v) 431.56 698 T
(ail\051) 437.26 698 T
0 0 0 1 0 0 0 1 K
(! Puts data from a component model g) 72 670 T
(r) 275.32 670 T
(id onto the e) 279.49 670 T
(xchange g) 345.18 670 T
(r) 400.43 670 T
(id) 404.6 670 T
(implicit none) 72 642 T
(real, intent\050in\051 :: model_data\050:, :, :\051) 72 614 T
(type \050boundar) 72 600 T
(y_map_type\051, intent\050inout\051 :: bd_map) 146.4 600 T
(real, intent\050inout\051 :: e) 72 586 T
(x_data\050:\051) 181.69 586 T
(logical, optional, intent\050inout\051 :: a) 72 572 T
(v) 244.51 572 T
(ail\050:\051) 250.21 572 T
1 1 0 0 0 0 1 1 K
0 F
(Ov) 72 544 T
(erloaded interf) 86.48 544 T
(ace also allo) 156.67 544 T
(ws model_data\050:, :\051 for no partitions) 215.69 544 T
0 0 0 1 0 0 0 1 K
0 1 0 0 1 0 1 1 K
(put_e) 72 502 T
(xchange_grid from a side 1 model is simple case) 98.48 502 T
0 0 0 1 0 0 0 1 K
0 1 0 0 1 0 1 1 K
(All e) 72 488 T
(xchange grid cells are guaranteed to be on same pe, no communication) 95.48 488 T
0 0 0 1 0 0 0 1 K
1 F
(! Bloc) 72 446 T
(k f) 101.77 446 T
(or side1) 114.08 446 T
(if\050bd_map%side == 1\051 then) 72 432 T
(   do i = 1, bd_map%total_target_cells) 72 418 T
0 1 1 0 1 0 0 1 K
(e) 92.02 404 T
(x_data\050i\051 = model_data\050bd_map%x\050i\051, bd_map%y\050i\051, bd_map%par) 98.33 404 T
(t\050i\051\051) 451.93 404 T
0 0 0 1 0 0 0 1 K
(   end do) 72 390 T
(! If a) 72 376 T
(v) 95.11 376 T
(ail is present, need to set it to tr) 100.81 376 T
(ue if area is not 0) 267.74 376 T
(   if\050present\050a) 72 362 T
(v) 142.45 362 T
(ail\051\051 then) 148.15 362 T
(      do i = 1, bd_map%total_target_cells) 72 348 T
1 1 0 0 0 0 1 1 K
(if\050e) 102.02 334 T
(x_map%area\050i\051 /= 0.0\051 a) 118.33 334 T
(v) 247.14 334 T
(ail\050i\051 = .tr) 252.84 334 T
(ue) 300.02 334 T
(.) 313.19 334 T
0 0 0 1 0 0 0 1 K
(      end do) 72 320 T
(   endif) 72 306 T
(   retur) 72 292 T
(n) 106.98 292 T
(end if) 72 278 T
0 1 1 0 1 0 0 1 K
(subroutine get_e) 72 250 T
(xchange_g) 161.03 250 T
(r) 219.61 250 T
(id_3d\050e) 223.79 250 T
(x_data, model_data, bd_map\051) 263.45 250 T
0 0 0 1 0 0 0 1 K
(! Gets data from e) 72 222 T
(xchange g) 167.69 222 T
(r) 222.94 222 T
(id f) 227.11 222 T
(or a giv) 242.76 222 T
(en component model whose boundar) 281.81 222 T
(y) 479.6 222 T
(! map is speci\336) 72 208 T
(ed.) 151.36 208 T
(implicit none) 72 180 T
(real, intent\050inout\051 :: model_data\050:, :, :\051) 72 152 T
(type \050boundar) 72 138 T
(y_map_type\051, intent\050inout\051 :: bd_map) 146.4 138 T
(real, intent\050in\051 :: e) 72 124 T
(x_data\050:\051) 165.01 124 T
0 F
(Ov) 72 96 T
(erloaded interf) 86.48 96 T
(ace also allo) 156.67 96 T
(ws model_data\050:, :\051 for no partitions) 215.69 96 T
0 1 1 0 1 0 0 1 K
(bd_map pointers indicate) 387 378 T
(which model cell is source) 387 366 T
(of data for the e) 387 354 T
(xchange) 462.79 354 T
(cells.) 387 342 T
378 333 522 396 R
0.5 H
2 Z
N
1 1 0 0 0 0 1 1 K
(a) 261 306 T
(v) 266.09 306 T
(ail is set to true e) 271.79 306 T
(v) 353.15 306 T
(erywhere data is a) 358.97 306 T
(v) 445.69 306 T
(ailable) 451.39 306 T
(and area of e) 261 294 T
(xchange cell is non-zero.) 322.45 294 T
252 288 486 315 R
N
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 2) 396 36 T
0 1 1 0 1 0 0 1 K
0 12 Q
(get_e) 72 712 T
(xchange_grid from a side 1 model is simple case) 97.81 712 T
0 0 0 1 0 0 0 1 K
2 F
(! Get map pointer) 72 670 T
(e) 72 656 T
(x_map => bd_map%e) 77.11 656 T
(x) 173.03 656 T
(! Do get f) 72 628 T
(or  side1 pes) 111.58 628 T
(if\050bd_map%side == 1\051 then) 72 614 T
(   call get_sum\050) 72 600 T
1 1 0 0 0 0 1 1 K
(bd_map%x,bd_map%y) 138.72 600 T
(,bd_map%par) 238.7 600 T
(t) 300.44 600 T
0 0 0 1 0 0 0 1 K
(, e) 303.18 600 T
(x_data, e) 313.76 600 T
(x_map%area, model_data\051) 353.89 600 T
(   retur) 72 586 T
(n) 100.74 586 T
(end if) 72 572 T
0 1 1 0 1 0 0 1 K
0 F
(F) 72 530 T
(or gi) 78.49 530 T
(v) 100.52 530 T
(en model cell, ha) 106.34 530 T
(v) 188.09 530 T
(e to sum up weighted contrib) 193.91 530 T
(utions from each e) 333.32 530 T
(xchange cell) 422.12 530 T
0 0 0 1 0 0 0 1 K
1 F
(! W) 72 502 T
(ant quic) 89.52 502 T
(k ef\336) 131.3 502 T
(cient sum if no sor) 156.65 502 T
(t) 254.5 502 T
(if\050.not. mak) 72 488 T
(e_e) 131.11 488 T
(xchange_reproduce\051 then) 150.77 488 T
(   do i = 1, siz) 72 474 T
(e\050x\051) 142.86 474 T
1 1 0 0 0 0 1 1 K
(sum\050x\050i\051, y\050i\051, par) 92.02 460 T
(t\050i\051\051 = sum\050x\050i\051, y\050i\051, par) 183.16 460 T
(t\050i\051\051 + dat\050i\051 * area\050i\051) 305.96 460 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(      total_area\050x\050i\051, y\050i\051, par) 72 446 T
(t\050i\051\051 = total_area\050x\050i\051, y\050i\051, par) 213.85 446 T
(t\050i\051\051 +area\050i\051) 367.36 446 T
0 0 0 1 0 0 0 1 K
(   end do) 72 432 T
(   prob) 72 418 T
(lem = .F) 105.78 418 T
(ALSE.) 148.5 418 T
(   where\050 total_area.NE.0. \051) 72 404 T
(       sum = sum/total_area) 72 390 T
(   else) 72 376 T
(where) 103.78 376 T
(       prob) 72 362 T
(lem = sum.NE.0.) 119.12 362 T
(   end where) 72 348 T
(   if\050 an) 72 334 T
(y\050prob) 108.5 334 T
(lem\051 \051call f) 142.27 334 T
(atal_error\050\325get_sum: non-z) 197.24 334 T
(ero area\325\051) 337.78 334 T
(   retur) 72 320 T
(n) 106.98 320 T
(end if) 72 306 T
1 1 0 0 0 0 1 1 K
0 F
(These indicate tar) 333 502.5 T
(get model) 418.09 502.5 T
(cell for each e) 332.25 491.25 T
(xchange cell.) 399.7 491.25 T
329.25 486 482.25 513 R
0.5 H
2 Z
N
(Just sum in order found) 387 411 T
(in bd_map inde) 387 399 T
(x. Area) 461.48 399 T
(needs to be summed each) 387.75 388.5 T
(time since fractional area) 387.75 376.5 T
(of model on other side may) 387 367.5 T
(ha) 387.75 357 T
(v) 398.84 357 T
(e changed.) 404.66 357 T
381.75 352.5 534.75 426.75 R
N
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 3) 396 36 T
0 1 1 0 1 0 0 1 K
0 12 Q
(Reproducing sum on v) 72 712 T
(arying numbers of PEs and v) 180.7 712 T
(arying domain decompositions) 319.38 712 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
215.46 682.8 72 682.8 2 L
0.6 H
0 Z
N
(Must sum the area weighted e) 72 684 T
312.53 682.8 215.46 682.8 2 L
N
(xchange cell contrib) 215.46 684 T
366.24 682.8 312.53 682.8 2 L
N
(utions to gi) 312.53 684 T
372.06 682.8 366.24 682.8 2 L
N
(v) 366.24 684 T
464.54 682.8 372.06 682.8 2 L
N
(en model cell in \336x) 372.06 684 T
504.19 682.8 464.54 682.8 2 L
N
(ed order) 464.54 684 T
1 1 0 0 0 0 1 1 K
(Exchange grid is unordered by de\336nition) 72 656 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(Must use v) 72 628 T
(alues of data being summed to order sum) 124.37 628 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(Solution: sort e) 72 600 T
(xchange cell contrib) 145.16 600 T
(utions by area*data, then sum in sorted order) 242.23 600 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(Detail of implementation from get_e) 72 572 T
(xchange_sort) 247.8 572 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
2 F
(! Get count of ho) 72 544 T
(w man) 144.59 544 T
(y v) 173.39 544 T
(alues to sor) 185.66 544 T
(t f) 237.01 544 T
(or each cell) 244.86 544 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(n) 72 530 T
(um\050:, :, :\051 = 0) 77.35 530 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(do i = 1, siz) 72 516 T
(e\050dat\051) 121.87 516 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   n) 72 502 T
(um\050x\050i\051, y\050i\051, par) 85.56 502 T
(t\050i\051\051 = n) 155.46 502 T
(um\050x\050i\051, y\050i\051, par) 186.78 502 T
(t\050i\051\051 + 1) 256.68 502 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end do) 72 488 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Ne) 72 460 T
(xt \337) 89.69 460 T
(at stor) 105 460 T
(age location to be used f) 132.23 460 T
(or this model_cell) 239.1 460 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(ne) 72 446 T
(xt = 1) 82.58 446 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(do i = 1, n) 72 432 T
(um_x;   do j = 1, n) 115.38 432 T
(um_y;   do k = 1, n) 193.76 432 T
(um_par) 274.88 432 T
(t) 308.72 432 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         star) 72 418 T
(t\050i, j, k\051 = ne) 113.51 418 T
(xt) 164.83 418 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         ne) 72 404 T
(xt = ne) 107.21 404 T
(xt + n) 136.67 404 T
(um\050i, j, k\051) 160.9 404 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end do; end do; end do) 72 390 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Could do this in a more stor) 72 362 T
(age ef\336) 197.68 362 T
(cient f) 229.96 362 T
(ashion if needed) 255.85 362 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(do i = 1, siz) 72 348 T
(e\050dat\051) 121.87 348 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   ind = star) 72 334 T
(t\050x\050i\051, y\050i\051, par) 121.44 334 T
(t\050i\051\051) 180.41 334 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   tdat\050ind\051 = dat\050i\051) 72 320 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   tarea\050ind\051 = area\050i\051) 72 306 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   tx\050ind\051 = x\050i\051) 72 292 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   ty\050ind\051 = y\050i\051) 72 278 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   tpar) 72 264 T
(t\050ind\051 = par) 97.64 264 T
(t\050i\051) 145.98 264 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   star) 72 250 T
(t\050x\050i\051, y\050i\051, par) 97.09 250 T
(t\050i\051\051 = star) 156.06 250 T
(t\050x\050i\051, y\050i\051, par) 198.91 250 T
(t\050i\051\051 + 1) 257.88 250 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end do) 72 236 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! No) 72 208 T
(w sor) 89.87 208 T
(t only within each cell) 113.86 208 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(do i = 1, n) 72 194 T
(um_x;   do j = 1, n) 115.38 194 T
(um_y;   do k = 1, n) 193.76 194 T
(um_par) 274.88 194 T
(t) 308.72 194 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Compute star) 72 180 T
(t and end f) 137.02 180 T
(or this cell; remember star) 183.17 180 T
(t has been incremented) 297.38 180 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         en = star) 72 166 T
(t\050i, j, k\051 - 1) 135.67 166 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         st = star) 72 152 T
(t\050i, j, k\051 - n) 132.38 152 T
(um\050i, j, k\051) 176 152 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         if\050en - st > 1\051 call single_cell_sor) 72 138 T
(t\050tdat\050st:en\051, tarea\050st:en\051, &) 237.92 138 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(            tx\050st:en\051, ty\050st:en\051, tpar) 72 124 T
(t\050st:en\051\051) 204.3 124 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end do; end do; end do) 72 110 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 F
(W) 351 468 T
(ant to get data into a form) 361.37 468 T
(where all v) 351 456 T
(alues going to model) 404.02 456 T
(cell \0501, 1, 1\051 come \336rst, then all) 351 444 T
(v) 351 432 T
(alues for cell \0501, 1, 2\051, etc.) 356.7 432 T
342 414 513 486 R
0.5 H
2 Z
N
(This allo) 351 324 T
(ws in place sort without) 393.04 324 T
(an) 351 312 T
(y more confusing indirection at) 362.15 312 T
(the e) 351 300 T
(xpense of some temporary) 373.81 300 T
(storage. F) 351 288 T
(or v) 398.15 288 T
(ery lo) 416.96 288 T
(w pe counts) 444.32 288 T
(this could be a concern.) 351 276 T
342 261 522 342 R
N
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 4) 396 36 T
1 1 0 0 0 0 1 1 K
0 12 Q
(put_e) 72 712 T
(xchange_grid for side2 model) 98.48 712 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(Exchange grid cells may be on dif) 72 684 T
(ferent PEs) 235.67 684 T
0 0 0 1 0 0 0 1 K
2 F
(! Rest of subroutine is f) 72 656 T
(or side 2, ma) 172.28 656 T
(y require comm) 228.8 656 T
(unication) 296.48 656 T
(! Allocate b) 72 642 T
(uff) 120.44 642 T
(er stor) 131.03 642 T
(age) 158.8 642 T
(allocate\050send_count\0500:n) 72 628 T
(um_pes - 1\051, receiv) 176.9 628 T
(e_count\0500:n) 260.82 628 T
(um_pes - 1\051\051) 312.67 628 T
0 1 1 0 1 0 0 1 K
(! First deter) 72 600 T
(mine ho) 122.06 600 T
(w m) 156.89 600 T
(uch data is going to each processor from this one?) 174.8 600 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(send_count = bd_map%len) 72 586 T
0 0 0 1 0 0 0 1 K
(send_count_max = maxv) 72 572 T
(al\050send_count\051) 181.37 572 T
(! Allocate stor) 72 558 T
(age to do the gather of data to be sent to this pe) 131.5 558 T
(allocate\050 send_b) 72 544 T
(uff) 143.96 544 T
(er\050send_count_max*2\051 \051) 154.55 544 T
1 1 0 0 0 0 1 1 K
(! Ne) 72 516 T
(xt deter) 89.69 516 T
(mine ho) 122.81 516 T
(w m) 157.63 516 T
(uch data is coming from each processor) 175.55 516 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(receiv) 72 502 T
(e_count = e) 97.94 502 T
(x_cells_per_pe\050bd_map) 149.29 502 T
(, n) 253.88 502 T
(um_pes\051) 264.71 502 T
0 0 0 1 0 0 0 1 K
(recv_count_max = maxv) 72 488 T
(al\050receiv) 178.62 488 T
(e_count\051) 215.5 488 T
(allocate\050rec_data\050recv_count_max\051, cell\050recv_count_max\051, recv_b) 72 474 T
(uff) 359.96 474 T
(er\050recv_count_max*2\051\051) 370.55 474 T
1 1 0 0 0 0 1 1 K
0 F
(e) 72 376 T
(x_cells_per_pe simply returns bd_map%e) 77.15 376 T
(x_cells_per_pe which is set up at initialization in) 278.6 376 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(complete_side1_boundary_map or complete_side2_boundary_map.) 72 362 T
0 0 0 1 0 0 0 1 K
2 F
(allocate\050bd_map%e) 72 334 T
(x_cells_per_pe\0500:n) 158.6 334 T
(um_pes - 1\051\051) 241.62 334 T
(bd_map%e) 72 320 T
(x_cells_per_pe = 0) 121.42 320 T
(do i = 1, e) 72 306 T
(x_map%siz) 115.14 306 T
(e) 165.26 306 T
(   if\050e) 72 292 T
(x_map%bd_map_id\050i, side\051 == bd_map%id\051 &) 93.52 292 T
(       bd_map%e) 72 278 T
(x_cells_per_pe\050e) 140.57 278 T
(x_map%pe\050i, side\051\051 = bd_map%e) 215.14 278 T
(x_cells_per_pe\050e) 360.53 278 T
(x_map%pe\050i, side\051\051 + 1) 435.1 278 T
(end do) 72 264 T
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 5) 396 36 T
0 12 Q
(\050put_e) 72 712 T
(xchange_grid side2 cont.\051) 102.48 712 T
0 1 1 0 1 0 0 1 K
(Need to e) 229.79 712 T
(xchange information with all other PEs) 275.59 712 T
0 0 0 1 0 0 0 1 K
2 F
(! r) 72 684 T
(ingwise comm) 80.93 684 T
(unication) 143.14 684 T
(do pe_dist = 0, n) 72 670 T
(um_pes-1) 144.92 670 T
(   to_pe = mod\050 this_pe+pe_dist, n) 72 656 T
(um_pes \051) 221.23 656 T
(   from_pe = mod\050 this_pe+n) 72 642 T
(um_pes-pe_dist, n) 195.5 642 T
(um_pes \051) 276.34 642 T
(   if\050send_count\050to_pe\051 /= 0\051 then) 72 628 T
(      call mpp_sync_self\050\051) 72 614 T
0 1 1 0 1 0 0 1 K
(inde) 88.42 600 T
(x = bd_map%star) 106.66 600 T
(t\050to_pe\051 - 1) 183.98 600 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(      do i = 1, send_count\050to_pe\051) 72 586 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
( send_b) 93.89 572 T
(uff) 128.66 572 T
(er\0502*i-1\051 = model_data\050bd_map%x\050inde) 139.25 572 T
(x + i\051, &) 311.43 572 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(            bd_map%y\050inde) 72 558 T
(x + i\051, bd_map%par) 175.57 558 T
(t\050inde) 261.65 558 T
(x + i\051\051) 285.9 558 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(         send_b) 72 544 T
(uff) 128.66 544 T
(er\0502*i\051 = bd_map%e) 139.25 544 T
(x_cell\050inde) 226.67 544 T
(x + i\051) 273.34 544 T
0 0 0 1 0 0 0 1 K
(      end do) 72 530 T
(      send_length = send_count\050to_pe\051 * 2) 72 516 T
(   else) 72 488 T
(       to_pe = NULL_PE) 72 474 T
(       send_length = 1) 72 460 T
(   end if) 72 446 T
(   if\050receiv) 72 432 T
(e_count\050from_pe\051 /= 0\051 then) 114.35 432 T
(       recv_length = receiv) 72 418 T
(e_count\050from_pe\051*2) 179.18 418 T
(   else) 72 404 T
(       recv_length = 1) 72 390 T
(       from_pe = NULL_PE) 72 376 T
(   end if) 72 362 T
0 1 0 0 1 0 1 1 K
(call mpp_tr) 80.21 348 T
(ansmit\050 send_b) 128.21 348 T
(uff) 195.24 348 T
(er) 205.82 348 T
(, send_length, to_pe) 213.97 348 T
(, recv_b) 302.98 348 T
(uff) 337.74 348 T
(er) 348.32 348 T
(, recv_length, from_pe \051) 356.47 348 T
0 0 0 1 0 0 0 1 K
(   if\050 from_pe) 72 334 T
(.NE.NULL_PE \051then) 127.06 334 T
(       rec_data\0501:recv_length/2\051 = recv_b) 72 320 T
(uff) 243.79 320 T
(er\0501:recv_length:2\051) 254.38 320 T
(       cell\0501:recv_length/2\051 = recv_b) 72 306 T
(uff) 220.26 306 T
(er\0502:recv_length:2\051) 230.84 306 T
1 1 0 0 0 0 1 1 K
(! Put the data in the appropr) 72 292 T
(iate e) 194.18 292 T
(xchange cell and set a) 217.9 292 T
(v) 315.58 292 T
(ail to tr) 320.2 292 T
(ue) 349.91 292 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(      do i = 1, recv_length/2) 72 278 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(         e) 72 264 T
(x_data\050cell\050i\051\051 = rec_data\050i\051) 101.74 264 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(      end do) 72 250 T
0 0 0 1 0 0 0 1 K
(! Set a) 72 236 T
(v) 100.21 236 T
(ail if there is data and e) 104.83 236 T
(xchange cell has non-z) 206.22 236 T
(ero area) 306.68 236 T
(      if\050present\050a) 72 222 T
(v) 137.94 222 T
(ail\051\051 then) 142.56 222 T
0 1 1 0 1 0 0 1 K
(        do i = 1, recv_length/2) 74.74 208 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(            if\050e) 72 194 T
(x_map%area\050cell\050i\051\051 /= 0.0\051 a) 118.14 194 T
(v) 245.04 194 T
(ail\050cell\050i\051\051 = .tr) 249.66 194 T
(ue) 309.7 194 T
(.) 320.46 194 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(         end do) 72 180 T
0 0 0 1 0 0 0 1 K
(      end if) 72 166 T
(   end if) 72 152 T
(end do) 72 138 T
(call mpp_sync_self\050\051) 72 124 T
(deallocate\050 send_b) 72 110 T
(uff) 154.91 110 T
(er) 165.49 110 T
(, recv_b) 173.64 110 T
(uff) 208.4 110 T
(er) 218.99 110 T
(, rec_data, cell, send_count,receiv) 227.14 110 T
(e_count \051) 376.16 110 T
0 1 1 0 1 0 0 1 K
0 F
(bd_map%start points to start of) 324 614.6 T
(set of cells with e) 324 605.6 T
(xchange grid on) 407.81 605.6 T
(to_pe) 324.34 596.6 T
315 594 486 630 R
0.5 H
2 Z
N
1 1 0 0 0 0 1 1 K
(Send the data and the number) 369 558 T
(of the e) 369 546 T
(xchange cell in which it) 404.81 546 T
(belongs.) 369 534 T
360 522 522 567 R
N
0 1 1 0 1 0 0 1 K
(Set a) 387 207 T
(v) 410.42 207 T
(ail to true only) 416.12 207 T
(if area of the e) 387 195 T
(xchange) 456.12 195 T
(cell is currently non-zero) 387 183 T
378 171 513 216 R
N
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 6) 396 36 T
1 1 0 0 0 0 1 1 K
0 12 Q
(get_e) 72 712 T
(xchange_grid for side 2 model, this is messy) 97.81 712 T
0 0 0 1 0 0 0 1 K
(Ag) 72 684 T
(ain, there is no guarantee that e) 86.6 684 T
(xchange grid and model cells are on the same PE) 236.05 684 T
1 F
(! First deter) 72 642 T
(mine ho) 132.98 642 T
(w m) 175.49 642 T
(uch data is going to each processor from e) 197.36 642 T
(xchange) 423.78 642 T
(! g) 72 628 T
(r) 85.22 628 T
(id cells that correspond to this bd_map) 89.4 628 T
(. I.E.) 294.41 628 T
0 1 1 0 1 0 0 1 K
(ho) 322.43 628 T
(w man) 335.59 628 T
(y e) 370.75 628 T
(xchange g) 386.4 628 T
(r) 441.65 628 T
(id) 445.82 628 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(! v) 72 614 T
(alues will m) 84.37 614 T
(y pe receiv) 146.2 614 T
(e from each other pe f) 203.92 614 T
(or this get.) 320.95 614 T
0 0 0 1 0 0 0 1 K
(receiv) 72 600 T
(e_count = bd_map%len) 103.7 600 T
(rec_total = sum\050receiv) 72 586 T
(e_count\0500:n) 190.07 586 T
(um_pes - 1\051\051) 253.32 586 T
(recv_count_max = maxv) 72 572 T
(al\050receiv) 202.08 572 T
(e_count\051) 247.12 572 T
(! Allocate the b) 72 530 T
(uff) 151.14 530 T
(ers f) 164.12 530 T
(or receiving data) 187.1 530 T
(allocate\050rec_data\050rec_total\051, rec_area\050rec_total\051, x\050rec_total\051, y\050rec_total\051, &) 72 516 T
(par) 72 502 T
(t\050rec_total\051\051) 89.82 502 T
(allocate\050 recv_b) 72 488 T
(uff) 156.46 488 T
(er\050recv_count_max*5\051 \051) 169.44 488 T
(! Ne) 72 446 T
(xt deter) 93.65 446 T
(mine ho) 133.97 446 T
(w m) 176.47 446 T
(uch data is going to each processor?  I.E.) 198.35 446 T
0 1 1 0 1 0 0 1 K
(ho) 422.47 446 T
(w man) 435.64 446 T
(y) 470.8 446 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(! e) 72 432 T
(xchange g) 84.98 432 T
(r) 140.23 432 T
(id v) 144.41 432 T
(alues will m) 162.78 432 T
(y processor send to e) 224.6 432 T
(v) 338.96 432 T
(er) 344.66 432 T
(y other processor) 355.69 432 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(! f) 72 418 T
(or this get, \050where are the model cells corresponding to m) 81.65 418 T
(y pes) 387.59 418 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(! e) 72 404 T
(xchange g) 84.98 404 T
(r) 140.23 404 T
(id cells\051.) 144.41 404 T
0 0 0 1 0 0 0 1 K
(send_count = e) 72 390 T
(x_cells_per_pe\050bd_map) 154.03 390 T
(, n) 281.66 390 T
(um_pes\051) 294.89 390 T
(send_count_max = maxv) 72 376 T
(al\050send_count\051) 205.43 376 T
(allocate\050 send_b) 72 362 T
(uff) 159.8 362 T
(er\050send_count_max*5\051 \051) 172.79 362 T
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 7) 396 36 T
0 1 1 0 1 0 0 1 K
0 12 Q
(get_e) 72 712 T
(xchange_grid for side 2, continued) 97.81 712 T
0 0 0 1 0 0 0 1 K
2 F
(! Set up indices f) 72 684 T
(or reading into the receiv) 144.4 684 T
(e b) 252.4 684 T
(uff) 265.84 684 T
(ers) 276.42 684 T
(star) 72 670 T
(t = 1) 88.88 670 T
(end = 0) 72 656 T
0 1 1 0 1 0 0 1 K
(! r) 72 642 T
(ingwise comm) 80.93 642 T
(unication) 143.14 642 T
0 0 0 1 0 0 0 1 K
(do pe_dist = 0, n) 72 628 T
(um_pes-1) 144.92 628 T
(   to_pe = mod\050 this_pe+pe_dist, n) 72 614 T
(um_pes \051) 221.23 614 T
(   from_pe = mod\050 this_pe+n) 72 600 T
(um_pes-pe_dist, n) 195.5 600 T
(um_pes \051) 276.34 600 T
(   if\050send_count\050to_pe\051 /= 0\051 then) 72 586 T
(       call mpp_sync_self\050\051) 72 572 T
0 1 0 0 1 0 1 1 K
(do i = 1, bd_map%e) 91.15 558 T
(x_len\050to_pe\051) 178.6 558 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(          inde) 72 544 T
(x = bd_map%e) 117.6 544 T
(x_ind\050bd_map%e) 183.16 544 T
(x_star) 259.37 544 T
(t\050to_pe\051 + i - 1\051) 286.64 544 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(send_b) 99.36 530 T
(uff) 131.4 530 T
(er\0505*i - 4\051 = e) 141.98 530 T
(x_data\050inde) 199.32 530 T
(x\051) 250.38 530 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(          send_b) 72 516 T
(uff) 131.4 516 T
(er\0505*i - 3\051 = e) 141.98 516 T
(x_map%area\050inde) 199.32 516 T
(x\051) 278.81 516 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(          send_b) 72 502 T
(uff) 131.4 502 T
(er\0505*i - 2\051 = e) 141.98 502 T
(x_map%x\050inde) 199.32 502 T
(x, side\051) 264.04 502 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(          send_b) 72 488 T
(uff) 131.4 488 T
(er\0505*i - 1\051 = e) 141.98 488 T
(x_map%y\050inde) 199.32 488 T
(x, side\051) 264.04 488 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(          send_b) 72 474 T
(uff) 131.4 474 T
(er\0505*i\051     = e) 141.98 474 T
(x_map%par) 196.04 474 T
(t\050inde) 249.02 474 T
(x, side\051) 273.28 474 T
0 0 0 1 0 0 0 1 K
(       end do) 72 460 T
(       send_length = send_count\050to_pe\051*5) 72 446 T
(   else) 72 432 T
(       to_pe = NULL_PE) 72 418 T
(       send_length = 1) 72 404 T
(   end if) 72 390 T
(   if\050receiv) 72 376 T
(e_count\050from_pe\051 /= 0\051 then) 114.35 376 T
(       recv_length = receiv) 72 362 T
(e_count\050from_pe\051*5) 179.18 362 T
(   else) 72 348 T
(       recv_length = 1) 72 334 T
(       from_pe = NULL_PE) 72 320 T
(   end if) 72 306 T
(   call mpp_tr) 72 292 T
(ansmit\050 send_b) 128.21 292 T
(uff) 195.24 292 T
(er) 205.82 292 T
(, send_length, to_pe) 213.97 292 T
(, recv_b) 302.98 292 T
(uff) 337.74 292 T
(er) 348.32 292 T
(, recv_length, from_pe \051) 356.47 292 T
(   if\050 from_pe) 72 278 T
(.NE.NULL_PE \051then) 127.06 278 T
(! Update pointers into receiv) 72 264 T
(e b) 194.22 264 T
(uff) 207.66 264 T
(er) 218.24 264 T
1 1 0 0 0 0 1 1 K
(star) 91.15 250 T
(t = bd_map%star) 108.04 250 T
(t\050from_pe\051) 183.18 250 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(       end = star) 72 236 T
(t + bd_map%len\050from_pe\051 - 1) 135.67 236 T
0 0 0 1 0 0 0 1 K
(       rec_data\050star) 72 222 T
(t:end\051 = recv_b) 149.6 222 T
(uff) 215.28 222 T
(er\0501:recv_length:5\051) 225.86 222 T
(       rec_area\050star) 72 208 T
(t:end\051 = recv_b) 150.14 208 T
(uff) 215.82 208 T
(er\0502:recv_length:5\051) 226.4 208 T
(       x\050star) 72 194 T
(t:end\051 = recv_b) 116.23 194 T
(uff) 181.91 194 T
(er\0503:recv_length:5\051) 192.49 194 T
(       y\050star) 72 180 T
(t:end\051 = recv_b) 116.23 180 T
(uff) 181.91 180 T
(er\0504:recv_length:5\051) 192.49 180 T
(       par) 72 166 T
(t\050star) 105.85 166 T
(t:end\051 = recv_b) 128.75 166 T
(uff) 194.42 166 T
(er\0505:recv_length:5\051) 205.01 166 T
(   end if) 72 152 T
(end do) 72 138 T
(call mpp_sync_self\050\051) 72 124 T
(deallocate\050 send_b) 72 110 T
(uff) 154.91 110 T
(er) 165.49 110 T
(, recv_b) 173.64 110 T
(uff) 208.4 110 T
(er \051) 218.99 110 T
1 1 0 0 0 0 1 1 K
0 F
(V) 351 504 T
(alues to be sent are the data,) 358.33 504 T
(the cell area, and the \050x, y) 351 492 T
(, part\051) 474.18 492 T
(triplet of the tar) 351 480 T
(get model cell.) 425.77 480 T
342 468 504 513 R
0.5 H
2 Z
N
0 1 0 0 1 0 1 1 K
(bd_map%e) 306 666 T
(x_len\050to_pe\051 has number of) 359.81 666 T
(e) 306 654 T
(xchange cells from local PE) 311.15 654 T
(for boundary cells on to_pe) 306 642 T
297 630 513 675 R
N
0 1 1 0 1 0 0 1 K
(An e) 342 603 T
(xtra le) 364.81 603 T
(v) 394.84 603 T
(el of indirection,) 400.66 603 T
(e) 342 591 T
(x_ind, is used to \336nd the) 347.15 591 T
(set of remote e) 342 579 T
(xchange cells) 412.8 579 T
333 567 495 612 R
N
1 1 0 0 0 0 1 1 K
(Gather all 5 classes of recei) 360 270 T
(v) 491.99 270 T
(ed) 497.81 270 T
(data into long array with data from) 360 258 T
(each PE in appropriate continguous) 360 246 T
(re) 360 234 T
(gion.) 369.14 234 T
351 225 540 288 R
N
0 1 1 0 1 0 0 1 K
(At \336nish, all quintuplets for model cells on) 315 153 T
(this pe are here. No) 315 141 T
(w do sum as for side1) 408.34 141 T
(case, doing sort if reproducing answer) 315 129 T
(required.) 315 117 T
306 99 531 171 R
N
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 8) 396 36 T
0 1 1 0 1 0 0 1 K
0 12 Q
(subroutine set_frac_area\050frac_area, bd_map\051) 72 712 T
0 0 0 1 0 0 0 1 K
1 F
(real, intent\050in\051 :: fr) 72 684 T
(ac_area\050:, :, :\051) 165.91 684 T
(type \050boundar) 72 670 T
(y_map_type\051, intent\050inout\051 :: bd_map) 146.4 670 T
0 F
(Allo) 72 628 T
(ws component models to adjust the percentage of cell area contained in each partition) 93.04 628 T
(This information must be used to update the information in the e) 72 614 T
(xchange_map_type) 381.47 614 T
0 1 1 0 1 0 0 1 K
(set_frac_area is closely analogous to put_e) 72 600 T
(xchange_grid) 277.44 600 T
0 0 0 1 0 0 0 1 K
( \050mo) 342.76 600 T
(ving info to e) 364.91 600 T
(xchange data) 429.06 600 T
(structure instead \051) 72 586 T
1 1 0 0 0 0 1 1 K
(F) 72 544 T
(or model on side1, requires no communication) 78.49 544 T
0 0 0 1 0 0 0 1 K
1 F
(! Bloc) 72 516 T
(k f) 101.77 516 T
(or side1) 114.08 516 T
(if\050bd_map%side == 1\051 then) 72 502 T
(   do i = 1, bd_map%total_target_cells) 72 488 T
(      e) 72 474 T
(x_map%fr) 98.33 474 T
(ac_area\050i, 1\051 = fr) 152.22 474 T
(ac_area\050bd_map%x\050i\051, bd_map%y\050i\051, bd_map%par) 240.47 474 T
(t\050i\051\051) 514.37 474 T
0 1 1 0 1 0 0 1 K
(e) 92.02 460 T
(x_map%area\050i\051 = e) 98.33 460 T
(x_map%total_area\050i\051 * e) 199.67 460 T
(x_map%fr) 328.02 460 T
(ac_area\050i, 1\051 * &) 381.91 460 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(         e) 72 446 T
(x_map%fr) 108.34 446 T
(ac_area\050i, 2\051) 162.23 446 T
0 0 0 1 0 0 0 1 K
(   end do) 72 432 T
(   retur) 72 418 T
(n) 106.98 418 T
(end if) 72 404 T
0 1 1 0 1 0 0 1 K
0 F
(The area must be updated by doing the) 279 405 T
(product of both boundary\325) 279 393 T
(s frac_area\325) 404.65 393 T
(s.) 460.28 393 T
(This is wh) 279 381 T
(y set_frac_area needs to) 328.94 381 T
(interact with e) 279 369 T
(xchange structure, rather) 347.47 369 T
(than staying local on bd_map.) 279 357 T
261 342 486 423 R
0.5 H
2 Z
N
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 9) 396 36 T
0 12 Q
(set_frac_area for side 2 component model) 72 712 T
0 1 1 0 1 0 0 1 K
2 F
(! First deter) 72 698 T
(mine ho) 122.06 698 T
(w m) 156.89 698 T
(uch data is going to each processor from this one) 174.8 698 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(send_count = bd_map%len) 72 684 T
0 0 0 1 0 0 0 1 K
(send_count_max = maxv) 72 670 T
(al\050send_count\051) 181.37 670 T
(! Allocate stor) 72 656 T
(age to do the gather of data to be sent to this pe) 131.5 656 T
(allocate\050 send_b) 72 642 T
(uff) 143.96 642 T
(er\050send_count_max*2\051 \051) 154.55 642 T
1 1 0 0 0 0 1 1 K
(! Ne) 72 614 T
(xt deter) 89.69 614 T
(mine ho) 122.81 614 T
(w m) 157.63 614 T
(uch data is coming from each processor to this one) 175.55 614 T
(.) 397.98 614 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(receiv) 72 600 T
(e_count = e) 97.94 600 T
(x_cells_per_pe\050bd_map) 149.29 600 T
(, n) 253.88 600 T
(um_pes\051) 264.71 600 T
0 0 0 1 0 0 0 1 K
(recv_count_max = maxv) 72 586 T
(al\050receiv) 178.62 586 T
(e_count\051) 215.5 586 T
(allocate\050 recv_b) 72 572 T
(uff) 141.22 572 T
(er\050recv_count_max*2\051, rec_fr) 151.8 572 T
(ac\050recv_count_max\051, cell\050recv_count_max\051\051) 279.1 572 T
(do pe_dist = 0, n) 72 544 T
(um_pes-1) 144.92 544 T
(   to_pe = mod\050 this_pe+pe_dist, n) 72 530 T
(um_pes \051) 221.23 530 T
(   from_pe = mod\050 this_pe+n) 72 516 T
(um_pes-pe_dist, n) 195.5 516 T
(um_pes \051) 276.34 516 T
(   if\050send_count\050to_pe\051 /= 0\051 then) 72 502 T
(      call mpp_sync_self\050\051) 72 488 T
0 1 1 0 1 0 0 1 K
(inde) 88.42 474 T
(x = bd_map%star) 106.66 474 T
(t\050to_pe\051 - 1) 183.98 474 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(      do i = 1, send_count\050to_pe\051) 72 460 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(send_b) 96.62 446 T
(uff) 128.66 446 T
(er\0502*i-1\051 = fr) 139.25 446 T
(ac_area\050bd_map%x\050inde) 191.89 446 T
(x + i\051, &) 301.46 446 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(            bd_map%y\050inde) 72 432 T
(x + i\051, bd_map%par) 175.57 432 T
(t\050inde) 261.65 432 T
(x + i\051\051) 285.9 432 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(         send_b) 72 418 T
(uff) 128.66 418 T
(er\0502*i\051 = bd_map%e) 139.25 418 T
(x_cell\050inde) 226.67 418 T
(x + i\051) 273.34 418 T
0 0 0 1 0 0 0 1 K
(      end do) 72 404 T
(      send_length = send_count\050to_pe\051 * 2) 72 390 T
(   else) 72 376 T
(       to_pe = NULL_PE;    send_length = 1) 72 362 T
(   end if) 72 348 T
(   if\050receiv) 72 334 T
(e_count\050from_pe\051 /= 0\051 then) 114.35 334 T
(       recv_length = receiv) 72 320 T
(e_count\050from_pe\051*2) 179.18 320 T
(   else) 72 306 T
(       recv_length = 1;   from_pe = NULL_PE) 72 292 T
(   end if) 72 278 T
(   call mpp_tr) 72 264 T
(ansmit\050 send_b) 128.21 264 T
(uff) 195.24 264 T
(er) 205.82 264 T
(, send_length, to_pe) 213.97 264 T
(, recv_b) 302.98 264 T
(uff) 337.74 264 T
(er) 348.32 264 T
(, recv_length, from_pe \051) 356.47 264 T
(   if\050 from_pe) 72 250 T
(.NE.NULL_PE \051then) 127.06 250 T
(       rec_fr) 72 236 T
(ac\0501:recv_length/2\051 = recv_b) 116.18 236 T
(uff) 240.92 236 T
(er\0501:recv_length:2\051) 251.51 236 T
(       cell\0501:recv_length/2\051 = recv_b) 72 222 T
(uff) 220.26 222 T
(er\0502:recv_length:2\051) 230.84 222 T
(! Put the data in the appropr) 72 208 T
(iate e) 194.18 208 T
(xchange cell and set a) 217.9 208 T
(v) 315.58 208 T
(ail to tr) 320.2 208 T
(ue) 349.91 208 T
(      do i = 1, recv_length/2) 72 194 T
(! Update the fr) 72 180 T
(actional area f) 134.24 180 T
(or this side and total area of the e) 195.7 180 T
(xchange cell) 341.4 180 T
0 1 1 0 1 0 0 1 K
(e) 96.62 166 T
(x_map%fr) 101.74 166 T
(ac_area\050cell\050i\051, side\051 = rec_fr) 145.91 166 T
(ac\050i\051) 271.28 166 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(         e) 72 152 T
(x_map%area\050cell\050i\051\051 = e) 101.74 152 T
(x_map%total_area\050cell\050i\051\051 * &) 206.09 152 T
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
(            e) 72 138 T
(x_map%fr) 109.94 138 T
(ac_area\050cell\050i\051, 1\051 * e) 154.12 138 T
(x_map%fr) 245.08 138 T
(ac_area\050cell\050i\051, 2\051) 289.25 138 T
0 0 0 1 0 0 0 1 K
(      end do) 72 124 T
(   end if) 72 110 T
(end do) 72 96 T
0 1 1 0 1 0 0 1 K
0 F
(Send info about range of cells that) 333 504 T
(are on to_pe.) 333 492 T
324 486 504 513 R
0.5 H
2 Z
N
1 1 0 0 0 0 1 1 K
(Info sent is fractional area) 378 450 T
(for this partition and the number) 378 438 T
(of the corresponding e) 378 426 T
(xchange) 485.46 426 T
(cell.) 378 414 T
369 405 540 459 R
N
0 1 1 0 1 0 0 1 K
(Update the fractional area) 405 135 T
(for side2 boundary map) 405 123 T
(and tak) 405 111 T
(e product to update) 439.87 111 T
(total area of this e) 405 99 T
(xchange) 490.8 99 T
(cell) 405 87 T
396 81 540 144 R
N
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 10) 396 36 T
72 226 540 694 C
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
108 604 504 658 R
3 H
2 Z
0 X
N
306 658 306 604 2 L
N
0 1 1 0 1 0 0 1 K
108 442 504 496 R
N
1 1 0 0 0 0 1 1 K
108 280 378 334 R
N
1 0 1 0 0 1 0 1 K
387 280 504 334 R
N
J
450 334 450 331.5 2 L
N
[4.804 8.647] 4.804 I
450 331.5 450 282.5 2 L
N
J
450 282.5 450 280 2 L
N
1 1 0 0 0 0 1 1 K
J
243 334 243 280 2 L
N
0 1 1 0 1 0 0 1 K
243 442 243 496 2 L
N
306 496 306 442 2 L
N
387 442 387 496 2 L
N
J
450 442 450 444.5 2 L
N
[4.804 8.647] 4.804 I
450 444.5 450 493.5 2 L
N
J
450 493.5 450 496 2 L
N
0 0 0 1 0 0 0 1 K
J
306 676 306 406 243 370 243 244 4 L
J
306 676 306 672.25 2 L
0.5 H
N
[7.616 6.601] 7.616 I
306 672.25 306 409.75 2 L
N
J
306 409.75 306 406 302.74 404.14 3 L
N
[7.807 6.766] 7.807 I
302.74 404.14 246.26 371.86 2 L
N
J
246.26 371.86 243 370 243 366.25 3 L
N
[7.5 6.5] 7.5 I
243 366.25 243 247.75 2 L
N
J
243 247.75 243 244 2 L
N
0 14 Q
(PE0) 279 667 T
(PE1) 315 667 T
(Side1) 292.11 508.04 T
1 0 0 0 0 1 1 1 K
(Boundary Map 1) 252 586 T
1 1 0 0 0 0 1 1 K
(Boundary Map 2) 198 343 T
1 0 1 0 0 1 0 1 K
(Boundary Map 3) 396 343 T
0 0 0 1 0 0 0 1 K
(Side2) 297 418.04 T
1 0 0 0 0 1 1 1 K
(Model 1) 0 90 99.56 610.95 TF
0 1 1 0 1 0 0 1 K
(Exchange) 0 90 99.56 442 TF
1 1 0 0 0 0 1 1 K
(Model 2) 0 90 99.56 289 TF
1 0 1 0 0 1 0 1 K
(Model 3) 0 270 512.44 336.05 TF
0 0 0 1 0 0 0 1 K
J
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 11) 396 36 T
0 12 Q
(Example of the e) 72 712 T
(xchange_map_type data structure) 153.47 712 T
1 F
(type e) 72 230 T
(xchange_map_type) 104.33 230 T
(   pr) 72 216 T
(iv) 92.86 216 T
(ate) 101.22 216 T
(   integer :: max_siz) 72 202 T
(e) 175.86 202 T
(, siz) 182.35 202 T
(e) 203.51 202 T
(! All second components are 2, one f) 72 188 T
(or each side) 266.41 188 T
(   real, pointer :: total_area\050:\051, area\050:\051, fr) 72 174 T
(ac_area\050:, :\051) 279.3 174 T
(   integer) 72 160 T
(, pointer :: bd_map_id\050:, :\051, x\050:, :\051, y\050:, :\051, par) 118.09 160 T
(t\050:, :\051, pe\050:, :\051) 348 160 T
(end type e) 72 146 T
(xchange_map_type) 127.68 146 T
72 240 540 708 C
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
108 618 504 672 R
3 H
2 Z
0 X
N
306 672 306 618 2 L
N
0 1 1 0 1 0 0 1 K
108 418.5 504 552.75 R
N
1 1 0 0 0 0 1 1 K
108 294 378 348 R
N
1 0 1 0 0 1 0 1 K
387 294 504 348 R
N
J
450 348 450 345.5 2 L
N
[4.804 8.647] 4.804 I
450 345.5 450 296.5 2 L
N
J
450 296.5 450 294 2 L
N
1 1 0 0 0 0 1 1 K
J
243 348 243 294 2 L
N
0 1 1 0 1 0 0 1 K
242.25 422.25 242.25 554.25 2 L
N
305.25 552 305.25 420 2 L
N
386.25 418.5 386.25 552 2 L
N
J
450 429 450 431.5 2 L
N
[4.628 8.331] 4.628 I
450 431.5 450 543.5 2 L
N
J
450 543.5 450 546 2 L
N
0 0 0 1 0 0 0 1 K
J
306 689.25 306 419.25 243 383.25 243 257.25 4 L
J
306 689.25 306 685.5 2 L
0.5 H
N
[7.616 6.601] 7.616 I
306 685.5 306 423 2 L
N
J
306 423 306 419.25 302.74 417.39 3 L
N
[7.807 6.766] 7.807 I
302.74 417.39 246.26 385.11 2 L
N
J
246.26 385.11 243 383.25 243 379.5 3 L
N
[7.5 6.5] 7.5 I
243 379.5 243 261 2 L
N
J
243 261 243 257.25 2 L
N
0 14 Q
(PE0) 279 681 T
(PE1) 315 681 T
(Side1) 288 554.44 T
1 0 0 0 0 1 1 1 K
(Boundary Map 1) 252 600 T
1 1 0 0 0 0 1 1 K
(Boundary Map 2) 198 357 T
1 0 1 0 0 1 0 1 K
(Boundary Map 3) 396 357 T
0 0 0 1 0 0 0 1 K
(Side2) 288 405.04 T
1 0 0 0 0 1 1 1 K
(Model 1) 0 90 99.56 624.95 TF
0 1 1 0 1 0 0 1 K
(Exchange) 0 90 99.56 456 TF
1 1 0 0 0 0 1 1 K
(Model 2) 0 90 99.56 303 TF
1 0 1 0 0 1 0 1 K
(Model 3) 0 270 512.44 350.05 TF
0 0 0 1 0 0 0 1 K
0 12 Q
(x = 1, y = 1, part = 1) 126 645 T
(x = 1, y = 1, part = 1) 315 645 T
(x = 1, y = 1, part = 1) 126 321 T
(x = 1, y = 1, part = 1) 252 321 T
(x = 1) 396 330 T
(y = 1) 396 318 T
(part = 1) 396 306 T
(x = 1) 459 330 T
(y = 1) 459 318 T
(part = 2) 459 306 T
1 0 0 0 0 1 1 1 K
(x\0501, 1\051 = 1, y\0501, 1\051 = 1) 113.25 540.75 T
(part\0501, 1\051 = 1, pe\0501, 1\051 = 0) 112.5 528 T
1 1 0 0 0 0 1 1 K
(x\0501, 2\051 = 1, y\0501, 2\051 = 1) 114.75 450.75 T
(part\0501, 2\051 = 1, pe\0501, 2\051 = 1) 114.75 438.75 T
1 0 0 0 0 1 1 1 K
(frac_area\0501, 1\051 = 1) 111 504.75 T
1 1 0 0 0 0 1 1 K
(frac_area\0501, 2\051 = 1) 114 462.8 T
0 0 0 1 0 0 0 1 K
(total_area = area = 2/3) 113.25 485.25 T
1 1 0 0 0 0 1 1 K
(x\0502, 2\051 = 1) 247.74 468.35 T
(y\0502, 2\051 = 1) 246 457.85 T
(part\0502, 2\051=1) 245.25 448.1 T
(pe\0502, 2\051 =2) 246 436.5 T
1 0 0 0 0 1 1 1 K
(x\0502, 1\051 = 1) 247.5 534.5 T
(y\0502, 1\051 = 1) 247.5 522.5 T
(part\0502,1\051=1) 247.5 510.5 T
(pe\0502, 1\051 = 1) 247.5 498.5 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(x\0502, 2\051 = 1) 389.25 472.25 T
(y\0502, 2\051 = 1) 388.5 458.75 T
(part\0502, 2\051=1) 388.5 445.25 T
(pe\0502, 2\051 = 2) 389.25 431.75 T
(frac_area) 389.25 497.75 T
(\0502, 2\051 = 1/2) 395.25 485 T
0 0 0 1 0 0 0 1 K
J
90 450 2 2 90 176.25 593.18 GG
176.25 593.68 170.3 593.68 176.25 614.44 182.2 593.68 4 Y
1 H
0 Z
N
176.25 593.68 170.3 593.68 176.25 614.44 182.2 593.68 4 Y
V
176.25 551 176.25 593.18 2 L
4 H
2 Z
N
90 450 2 2 90 272 594.18 GG
272 594.68 266.05 594.68 272 615.44 277.95 594.68 4 Y
1 H
0 Z
N
272 594.68 266.05 594.68 272 615.44 277.95 594.68 4 Y
V
272 552 272 594.18 2 L
4 H
2 Z
N
90 450 2 2 270 177.25 373.57 GG
177.25 373.07 183.2 373.07 177.25 352.31 171.3 373.07 4 Y
1 H
0 Z
N
177.25 373.07 183.2 373.07 177.25 352.31 171.3 373.07 4 Y
V
177.25 373.57 177.25 415.75 2 L
4 H
2 Z
N
90 450 2 2 270 271.5 373.82 GG
271.5 373.32 277.45 373.32 271.5 352.56 265.55 373.32 4 Y
1 H
0 Z
N
271.5 373.32 277.45 373.32 271.5 352.56 265.55 373.32 4 Y
V
271.5 373.82 271.5 416 2 L
4 H
2 Z
N
90 450 2 2 270 420.5 376.32 GG
420.5 375.82 426.45 375.82 420.5 355.06 414.55 375.82 4 Y
1 H
0 Z
N
420.5 375.82 426.45 375.82 420.5 355.06 414.55 375.82 4 Y
V
420.5 376.32 420.5 418.5 2 L
4 H
2 Z
N
J
90 450 2 2 90 355.75 594.43 GG
355.75 594.93 349.8 594.93 355.75 615.69 361.7 594.93 4 Y
1 H
0 Z
N
355.75 594.93 349.8 594.93 355.75 615.69 361.7 594.93 4 Y
V
J
355.75 552.25 355.75 554.25 2 L
4 H
2 Z
N
[4.019 10.047] 4.019 I
355.75 554.25 355.75 592.43 2 L
N
J
355.75 592.43 355.75 594.43 2 L
N
J
90 450 2 2 90 421.5 593.93 GG
421.5 594.43 415.55 594.43 421.5 615.19 427.45 594.43 4 Y
1 H
0 Z
N
421.5 594.43 415.55 594.43 421.5 615.19 427.45 594.43 4 Y
V
J
421.5 551.75 421.5 553.75 2 L
4 H
2 Z
N
[4.019 10.047] 4.019 I
421.5 553.75 421.5 591.93 2 L
N
J
421.5 591.93 421.5 593.93 2 L
N
J
90 450 2 2 90 474 595.43 GG
474 595.93 468.05 595.93 474 616.69 479.95 595.93 4 Y
1 H
0 Z
N
474 595.93 468.05 595.93 474 616.69 479.95 595.93 4 Y
V
J
474 553.25 474 555.25 2 L
4 H
2 Z
N
[4.019 10.047] 4.019 I
474 555.25 474 593.43 2 L
N
J
474 593.43 474 595.43 2 L
N
J
90 450 2 2 270 476.5 375.82 GG
476.5 375.32 482.45 375.32 476.5 354.56 470.55 375.32 4 Y
1 H
0 Z
N
476.5 375.32 482.45 375.32 476.5 354.56 470.55 375.32 4 Y
V
J
476.5 375.82 476.5 377.82 2 L
4 H
2 Z
N
[4.019 10.047] 4.019 I
476.5 377.82 476.5 416 2 L
N
J
476.5 416 476.5 418 2 L
N
J
90 450 2 2 270 349.5 374.57 GG
349.5 374.07 355.45 374.07 349.5 353.31 343.55 374.07 4 Y
1 H
0 Z
N
349.5 374.07 355.45 374.07 349.5 353.31 343.55 374.07 4 Y
V
J
349.5 374.57 349.5 376.57 2 L
4 H
2 Z
N
[4.019 10.047] 4.019 I
349.5 376.57 349.5 414.75 2 L
N
J
349.5 414.75 349.5 416.75 2 L
N
1 1 0 0 0 0 1 1 K
(bd_map_id\0501, 2\051 = 2) 114 426 T
1 0 0 0 0 1 1 1 K
(bd_map_id\0501, 1\051 = 1) 111.75 515.25 T
0 0 0 1 0 0 0 1 K
J
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 12) 396 36 T
0 1 1 0 1 0 0 1 K
0 12 Q
(Example of boundary_map_type data structure) 72 712 T
0 0 0 1 0 0 0 1 K
(Life is simple for boundary maps on) 72 684 T
0 1 1 0 1 0 0 1 K
277.98 682.8 249.65 682.8 2 L
0.6 H
0 Z
N
(side 1) 249.65 684 T
0 0 0 1 0 0 0 1 K
1 F
(type boundar) 72 220 T
(y_map_type) 142.4 220 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   pr) 72 206 T
(iv) 92.86 206 T
(ate) 101.22 206 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   type\050e) 72 192 T
(xchange_map_type\051, pointer :: e) 115 192 T
(x) 286.73 192 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   integer :: side) 72 178 T
(, id, total_target_cells) 153.86 178 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   logical :: allocated) 72 164 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   integer) 72 150 T
(, pointer :: e) 118.09 150 T
(x_cells_per_pe\050:\051) 181.1 150 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Ne) 72 136 T
(w stuff in boundar) 93.77 136 T
(y_map f) 188.84 136 T
(or re) 231.17 136 T
(vision) 255.48 136 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   integer) 72 122 T
(, pointer :: x\050:\051, y\050:\051, par) 118.09 122 T
(t\050:\051, e) 240.61 122 T
(x_cell\050:\051) 268.26 122 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   integer) 72 108 T
(, pointer :: star) 118.09 108 T
(t\050:\051, len\050:\051, e) 195.28 108 T
(x_star) 256.93 108 T
(t\050:\051, e) 290.09 108 T
(x_len\050:\051) 317.74 108 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   integer) 72 94 T
(, pointer :: e) 118.09 94 T
(x_ind\050:\051) 181.1 94 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end type boundar) 72 80 T
(y_map_type) 165.76 80 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
72 230 540 680 C
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
117.75 461.75 513.75 625.25 R
3 H
2 Z
0 X
N
317.25 624.5 318.75 461.5 2 L
N
0 1 1 0 1 0 0 1 K
117.75 259.25 513.75 313.25 R
N
252.75 259.25 252.75 313.25 2 L
N
315.75 313.25 315.75 259.25 2 L
N
396.75 259.25 396.75 313.25 2 L
N
J
459.75 259.25 459.75 261.75 2 L
N
[4.804 8.647] 4.804 I
459.75 261.75 459.75 310.75 2 L
N
J
459.75 310.75 459.75 313.25 2 L
N
0 0 0 1 0 0 0 1 K
0 14 Q
(PE0) 290.25 633.5 T
(PE1) 333 633.5 T
(Side1) 301.86 325.29 T
1 0 0 0 0 1 1 1 K
(Boundary Map 1) 267.75 446.75 T
0 0 0 1 0 0 0 1 K
(Side2) 306.75 235.29 T
1 0 0 0 0 1 1 1 K
(Model 1) 0 90 112.31 529.45 TF
0 1 1 0 1 0 0 1 K
(Exchange) 0 90 109.31 259.25 TF
0 0 0 1 0 0 0 1 K
J
317.25 661 317.24 657.25 2 L
0.5 H
N
[7.47 6.474] 7.47 I
317.24 657.25 315.77 218.5 2 L
N
J
315.77 218.5 315.75 214.75 2 L
N
0 12 Q
(e) 127.5 609.25 T
(x_cells_per_pe\0500:1\051 = {2, 0}) 132.65 609.25 T
(x\0501:2\051 = {1, 1}) 127.5 597.25 T
(y\0501:2\051 = {1, 1}) 127.5 585.25 T
(part\0501:2\051 = {1, 1}) 127.5 573.25 T
(e) 127.5 561.25 T
(x_cell\0501:2\051 = {1, 2}) 132.65 561.25 T
(start\0500:1\051 = {1, 0}) 127.5 537.25 T
(len\0500:1\051 = {2, 0}) 127.5 525.25 T
(e) 127.5 513.25 T
(x_start\0500:1\051 = {1, 0}) 132.65 513.25 T
(e) 127.5 501.25 T
(x_len\0500:1\051 = {2, 0}) 132.65 501.25 T
(e) 127.5 477.25 T
(x_ind is unused) 132.65 477.25 T
(e) 327 611.5 T
(x_cells_per_pe\0500:1\051 = {0, 2}) 332.15 611.5 T
(x\0501:3\051 = {1, 1, 1}) 327 599.5 T
(y\0501:3\051 = {1, 1, 1}) 327 587.5 T
(part\0501:3\051 = {1, 1, 1}) 327 575.5 T
(e) 327 563.5 T
(x_cell\0501:3\051 = {1, 2, 3}) 332.15 563.5 T
(start\0500:1\051 = {0, 1}) 327 539.5 T
(len\0500:1\051 = {0, 3}) 327 527.5 T
(e) 327 515.5 T
(x_start\0500, 1\051 = {0, 1}) 332.15 515.5 T
(e) 327 503.5 T
(x_len\0500, 1\051 = {0, 3}) 332.15 503.5 T
(e) 327 479.5 T
(x_ind is unused) 332.15 479.5 T
(x, y) 108 439 T
(, part and e) 125.22 439 T
(x_cell refer to) 178.36 439 T
(\324ordered\325 set of cells from this) 106.5 428.5 T
(component model) 107.25 417.25 T
(start and len indicate which cells) 108.75 394 T
(from this component model ha) 108 380.5 T
(v) 255.08 380.5 T
(e) 260.9 380.5 T
(e) 108.75 368.5 T
(xchange cells on each pe) 113.9 368.5 T
(e) 108 350.5 T
(x_start and e) 113.15 350.5 T
(x_len indicate where) 174.29 350.5 T
(these cells are in the e) 107.25 337 T
(xchange cell) 212.71 337 T
(list on that pe) 107.25 325 T
0 1 1 0 1 0 0 1 K
J
(1) 165 287.25 T
(2) 272.25 286.5 T
(1) 340.5 286.5 T
(2) 417 287.25 T
(3) 477.75 283.5 T
0 0 0 1 0 0 0 1 K
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "12" 12
%%Page: "13" 13
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 13) 396 36 T
0 1 1 0 1 0 0 1 K
0 12 Q
(Example of boundary_map_type data structure) 72 712 T
0 0 0 1 0 0 0 1 K
(Life is complicated for boundary maps on) 72 684 T
0 1 1 0 1 0 0 1 K
304.63 682.8 276.3 682.8 2 L
0.6 H
0 Z
N
(side 2) 276.3 684 T
0 0 0 1 0 0 0 1 K
72 184 540 652 C
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
108.75 586 504.75 640 R
3 H
2 Z
0 X
N
1 1 0 0 0 0 1 1 K
108 202.75 378 400.75 R
N
1 0 1 0 0 1 0 1 K
387 204.25 504 399.25 R
N
J
449.25 399.75 449.25 397.25 2 L
N
[4.974 8.953] 4.974 I
449.25 397.25 449.25 207.25 2 L
N
J
449.25 207.25 449.25 204.75 2 L
N
1 1 0 0 0 0 1 1 K
J
196.5 400.5 196.5 201 2 L
N
0 1 1 0 1 0 0 1 K
195 586 195 640 2 L
N
306.75 640 306.75 586 2 L
N
387.75 586 387.75 640 2 L
N
J
450.75 586 450.75 588.5 2 L
N
[4.804 8.647] 4.804 I
450.75 588.5 450.75 637.5 2 L
N
J
450.75 637.5 450.75 640 2 L
N
1 1 0 0 0 0 1 1 K
0 14 Q
(Boundary Map 2) 160.5 499.75 T
1 0 1 0 0 1 0 1 K
(Boundary Map 3) 390.75 499.75 T
0 0 0 1 0 0 0 1 K
(Side2) 297.75 562.04 T
0 1 1 0 1 0 0 1 K
(Exchange) 0 90 100.31 586 TF
1 1 0 0 0 0 1 1 K
(Model 2) 0 90 99.56 281.5 TF
1 0 1 0 0 1 0 1 K
(Model 3) 0 270 512.44 333.8 TF
0 0 0 1 0 0 0 1 K
0 12 Q
(e) 201 388.5 T
(x_cells_per_pe\0500:1\051 = {1, 1}) 206.15 388.5 T
J
306 646.5 305.25 502.5 195 459 195 192.75 4 L
J
306 646.5 305.98 642.75 2 L
0.5 H
N
[7.726 6.696] 7.726 I
305.98 642.75 305.27 506.25 2 L
N
J
305.27 506.25 305.25 502.5 301.76 501.12 3 L
N
[7.968 6.906] 7.968 I
301.76 501.12 198.49 460.38 2 L
N
J
198.49 460.38 195 459 195 455.25 3 L
N
[7.507 6.506] 7.507 I
195 455.25 195 196.5 2 L
N
J
195 196.5 195 192.75 2 L
N
(x\0501:2\051 = {1, 1}) 201 376.5 T
(y\0501:2\051 = {1, 1}) 201 364.5 T
(part\0501:2\051 = {1, 1}) 201 352.5 T
(e) 201 340.5 T
(x_cell\0501:2\051 = {2, 1}) 206.15 340.5 T
(start\0500:1\051 = {1, 2}) 201 328.5 T
(len\0500:1\051 = {1, 1}) 201 316.5 T
(e) 201 304.5 T
(x_start\0500:1\051 = {0, 1}) 206.15 304.5 T
(   \050) 201 292.5 T
0 1 1 0 1 0 0 1 K
(THESE INDEX INT) 214 292.5 T
(O e) 314.42 292.5 T
(x_ind) 331.24 292.5 T
0 0 0 1 0 0 0 1 K
(\051) 358.57 292.5 T
(e) 201 280.5 T
(x_len\0500:1\051 = {0, 1}) 206.15 280.5 T
(e) 201 256.5 T
(x_ind\0501:2\051 = {0, 1}) 206.15 256.5 T
(   \050) 201 232.5 T
0 1 1 0 1 0 0 1 K
(e) 214 232.5 T
(xchange cell on pe2 is 1st) 219.15 232.5 T
0 0 0 1 0 0 0 1 K
(\051) 342.79 232.5 T
0 1 1 0 1 0 0 1 K
(1) 149.25 610.5 T
(2) 249.75 611.25 T
(1) 339 612 T
(2) 415.5 611.25 T
(3) 472.5 609 T
1 1 0 0 0 0 1 1 K
0 14 Q
(1) 243.75 433.5 T
(2) 333 430.5 T
0 0 0 1 0 0 0 1 K
J
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "13" 13
%%Page: "14" 14
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 14) 396 36 T
FMENDPAGE
%%EndPage: "14" 14
%%Page: "15" 15
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 15) 396 36 T
0 1 1 0 1 0 0 1 K
133.33 710.8 72 710.8 2 L
0.6 H
0 Z
N
0 12 Q
(Initialization) 72 712 T
( of e) 133.33 712 T
(xchange_grid structures) 154.48 712 T
1 1 0 0 0 0 1 1 K
(init_boundary_map) 72 684 T
0 0 0 1 0 0 0 1 K
( allocates storage that depends on number of PEs) 166 684 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(Links boundary maps to appropriate e) 72 670 T
(xchange map) 254.12 670 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(Assigns unique id to boundary map) 72 656 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
1 F
(subroutine init_boundar) 72 628 T
(y_map\050bd_map) 197.76 628 T
(, side) 280.7 628 T
(, map\051) 309.2 628 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(type \050boundar) 72 600 T
(y_map_type\051, intent\050inout\051 :: bd_map) 146.4 600 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(type \050e) 72 586 T
(xchange_map_type\051, intent\050inout\051, target :: map) 108.32 586 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(integer) 72 572 T
(, intent\050in\051 :: side) 108.08 572 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
0 F
(lon_lat_size computes size of e) 72 516 T
(xchange grid created by tw) 221.8 516 T
(o model grids) 351.64 516 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(Has tw) 72 488 T
(o o) 105.54 488 T
(v) 120.36 488 T
(erloaded interf) 126.18 488 T
(aces for lon-lat grids at present) 196.37 488 T
0 1 1 0 1 0 0 1 K
104.88 472.8 72 472.8 2 L
N
(This w) 72 474 T
257.23 472.8 104.88 472.8 2 L
N
(ould need to be modi\336ed for dif) 104.88 474 T
335.88 472.8 257.23 472.8 2 L
N
(ferent grid types) 257.23 474 T
0 0 0 1 0 0 0 1 K
1 F
(subroutine lon_lat1_siz) 72 446 T
(e\050b) 194.54 446 T
(lon1, b) 211.64 446 T
(lat1, b) 247.43 446 T
(lon2, b) 279.88 446 T
(lat2, mask1, mask2, &) 315.66 446 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   n) 72 432 T
(um_par) 88.56 432 T
(t1, n) 129.72 432 T
(um_par) 152.95 432 T
(t2, bd_map\051) 194.11 432 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(real, intent\050in\051 ::) 72 404 T
0 1 1 0 1 0 0 1 K
(b) 158.7 404 T
(lon1\050:\051, b) 165.13 404 T
(lat1\050:\051, b) 212.24 404 T
(lon2\050:\051, b) 256.02 404 T
(lat2\050:\051) 303.13 404 T
0 0 0 1 0 0 0 1 K
(logical, intent\050in\051, dimension\050:, :\051 :: mask1, mask2) 72 390 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(integer) 72 376 T
(, intent\050in\051 :: n) 108.08 376 T
(um_par) 181.33 376 T
(t1, n) 222.49 376 T
(um_par) 245.72 376 T
(t2) 286.88 376 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(type \050boundar) 72 362 T
(y_map_type\051, intent\050inout\051 :: bd_map) 146.4 362 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
0 F
(F) 72 306 T
(or spectral modelers:) 78.49 306 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
1 F
(subroutine lon_lat2_siz) 72 278 T
(e\050b) 194.54 278 T
(lon1, b) 211.64 278 T
(lat1, b) 247.43 278 T
(lon2, b) 279.88 278 T
(lat2, mask1, mask2, &) 315.66 278 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   n) 72 264 T
(um_par) 88.56 264 T
(t1, n) 129.72 264 T
(um_par) 152.95 264 T
(t2, bd_map\051) 194.11 264 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Second dimension on lon lats is 2) 72 236 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(real, intent\050in\051 :: b) 72 222 T
(lon1\050:, :\051, b) 165.13 222 T
(lat1\050:, :\051, b) 222.25 222 T
(lon2\050:, :\051, b) 276.04 222 T
(lat2\050:, :\051) 333.16 222 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(logical, intent\050in\051, dimension\050:, :\051 :: mask1, mask2) 72 208 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(integer) 72 194 T
(, intent\050in\051 :: n) 108.08 194 T
(um_par) 181.33 194 T
(t1, n) 222.49 194 T
(um_par) 245.72 194 T
(t2) 286.88 194 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(type \050boundar) 72 180 T
(y_map_type\051, intent\050inout\051 :: bd_map) 146.4 180 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
0 F
(Arrays of lon and lat) 390.75 414 T
(boundaries \050these ha) 390.75 402 T
(v) 489.15 402 T
(e) 494.97 402 T
J
385.5 370.5 509.25 429 R
0.5 H
2 Z
N
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
1 F
(b) 391.5 220.5 T
(lon1\050:, 2\051 has left) 397.93 220.5 T
(and r) 391.5 208.5 T
(ight boundar) 419.03 208.5 T
(y) 486.1 208.5 T
388.5 200.25 497.25 235.5 R
N
0 1 1 0 1 0 0 1 K
0 F
(dimension 1 greater) 390.75 390 T
(than number of cells\051.) 390.75 378 T
0 0 0 1 0 0 0 1 K
J
FMENDPAGE
%%EndPage: "15" 15
%%Page: "16" 16
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 16) 396 36 T
0 1 1 0 1 0 0 1 K
170.99 710.8 72 710.8 2 L
0.6 H
0 Z
N
0 12 Q
(subroutine size_map) 72 712 T
0 0 0 1 0 0 0 1 K
( does mpp communication to compute grid o) 170.99 712 T
(v) 385.8 712 T
(erlaps) 391.62 712 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(Ha) 72 684 T
(v) 85.75 684 T
(e to let all other PEs kno) 91.57 684 T
(w the details of my PEs grid and get theirs) 209.27 684 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
1 F
(! Get n) 72 656 T
(umber of lats/lons f) 107.9 656 T
(or each other processor\325) 208.92 656 T
(s g) 337.7 656 T
(r) 353.59 656 T
(id 2 inf) 357.77 656 T
(or) 392.76 656 T
(mation) 403.73 656 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(n) 72 642 T
(umq\0501, this_pe\051 = siz) 78.55 642 T
(e\050b) 190.08 642 T
(lon2, 1\051) 207.18 642 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(n) 72 628 T
(umq\0502, this_pe\051 = siz) 78.55 628 T
(e\050b) 190.08 628 T
(lat2, 1\051) 207.18 628 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(if\050siz) 72 600 T
(e\050mask2, 1\051/=n) 96.48 600 T
(umq\0501, this_pe\051 .or) 176.72 600 T
(. siz) 276.83 600 T
(e\050mask2, 2\051/=n) 297.98 600 T
(umq\0502, this_pe\051\051 &) 378.23 600 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   call f) 72 586 T
(atal_error\050\325) 106.32 586 T
(siz) 163.73 586 T
(e_map; mask2 siz) 178.21 586 T
(e inconsistent with b) 274.73 586 T
(lon2 or b) 382.54 586 T
(lat2\325\051) 428.99 586 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(!) 72 558 T
0 1 1 0 1 0 0 1 K
(Broadcast the lon and lat) 78.67 558 T
229.24 555.75 214.75 555.75 2 L
0.5 H
N
229.24 553.75 214.75 553.75 2 L
N
(siz) 214.75 558 T
241.91 555.75 229.24 555.75 2 L
N
241.91 553.75 229.24 553.75 2 L
N
(es) 229.24 558 T
0 0 0 1 0 0 0 1 K
(do from_pe = 0, n) 72 544 T
(um_pes - 1) 166.27 544 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   call mpp_tr) 72 530 T
(ansmit\050 n) 140.57 530 T
(umq\0501:2,from_pe\051, 2, ALL_PES) 189.79 530 T
(, n) 356.96 530 T
(umq\0501:2,from_pe\051, 2, from_pe \051) 370.19 530 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end do) 72 516 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Load the lons and lats and the masks f) 72 488 T
(or tr) 283.76 488 T
(ansmission) 304.98 488 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(! Send a pair of lons) 72 474 T
(, a pair of lats) 178.55 474 T
(, and a lon b) 250.4 474 T
(y lat mask) 316.21 474 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(send_length = n) 72 460 T
(umq\0501, this_pe\051 * 2 + n) 157.61 460 T
(umq\0502, this_pe\051 * 2 + &) 279.22 460 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(   n) 72 446 T
(umq\0501, this_pe\051 * n) 88.56 446 T
(umq\0502, this_pe\051) 189.82 446 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Allocate tempor) 72 432 T
(ar) 161.92 432 T
(y space f) 172.94 432 T
(or these quantities) 220.61 432 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(allocate\050send_data\050send_length\051\051) 72 418 T
0 1 1 0 1 0 0 1 K
(! Load up the lo) 72 390 T
(w) 154.55 390 T
(er lon bounds) 163.09 390 T
(, then the upper lon bounds) 235.62 390 T
0 0 0 1 0 0 0 1 K
(send_data\0501:n) 72 376 T
(umq\0501, this_pe\051\051 = b) 148.6 376 T
(lon2\050:, 1\051) 256.07 376 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(send_data\050n) 72 362 T
(umq\0501, this_pe\051 + 1 : 2 * n) 138.59 362 T
(umq\0501, this_pe\051\051 = b) 276.88 362 T
(lon2\050:, 2\051) 384.35 362 T
0 1 1 0 1 0 0 1 K
(! Load up the lo) 72 334 T
(w) 154.55 334 T
(er lat bounds) 163.09 334 T
(, then the upper lat bounds) 232.28 334 T
0 0 0 1 0 0 0 1 K
(send_data\0502*n) 72 320 T
(umq\0501, this_pe\051 + 1 : 2*n) 149.93 320 T
(umq\0501, this_pe\051 + n) 281.54 320 T
(umq\0502, this_pe\051\051 = &) 385.14 320 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   b) 72 306 T
(lat2\050:, 1\051) 88.44 306 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(send_data\0502*n) 72 292 T
(umq\0501, this_pe\051 + n) 149.93 292 T
(umq\0502, this_pe\051 + 1 : &) 253.52 292 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   2*n) 72 278 T
(umq\0501, this_pe\051 + 2*n) 99.9 278 T
(umq\0502, this_pe\051\051 = b) 214.84 278 T
(lat2\050:, 2\051) 322.31 278 T
0 1 1 0 1 0 0 1 K
(! Loading the logical mask f) 72 250 T
(or sending as real; load as f) 217.04 250 T
(alse) 364.09 250 T
(, toggle if tr) 385.92 250 T
(ue) 445.46 250 T
0 0 0 1 0 0 0 1 K
(inde) 72 236 T
(x = 2*n) 94.32 236 T
(umq\0501, this_pe\051 + 2*n) 131.89 236 T
(umq\0502, this_pe\051 + 1) 246.83 236 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(send_data\050inde) 72 222 T
(x:\051 = 0.0) 154.36 222 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(do i = 1, n) 72 208 T
(umq\0501, this_pe\051) 124.92 208 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   do j = 1, n) 72 194 T
(umq\0502, this_pe\051) 134.93 194 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(      if\050mask2\050i, j\051\051 send_data\050inde) 72 180 T
(x\051 = 1.0) 247.03 180 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(      inde) 72 166 T
(x = inde) 114.34 166 T
(x + 1) 156.34 166 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   end do) 72 152 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end do) 72 138 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "16" 16
%%Page: "17" 17
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 17) 396 36 T
0 12 Q
(Ne) 72 712 T
(xt need to broadcast and compute size of o) 85.81 712 T
(v) 290.26 712 T
(erlap) 296.08 712 T
0 1 1 0 1 0 0 1 K
403.04 710.8 323.06 710.8 2 L
0.6 H
0 Z
N
(\050size_map cont.\051) 323.06 712 T
1 F
(! Broadcast the lons and lats and the masks) 72 684 T
0 0 0 1 0 0 0 1 K
(do from_pe = 0, n) 72 670 T
(um_pes - 1) 166.27 670 T
0 1 1 0 1 0 0 1 K
(! Compute length of data to be recie) 72 656 T
(v) 262.42 656 T
(ed from from_pe) 268.12 656 T
0 0 0 1 0 0 0 1 K
(   rec_length = 2*n) 72 642 T
(umq\0501, from_pe\051 + 2*n) 169.61 642 T
(umq\0502, from_pe\051 + &) 289.87 642 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(        n) 72 628 T
(umq\0501, from_pe\051 * n) 105.24 628 T
(umq\0502, from_pe\051) 211.82 628 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   if\050 this_pe) 72 614 T
(.EQ.from_pe .AND) 133.85 614 T
(. rec_length.NE.send_length \051call f) 233.04 614 T
(atal_error\050 \325) 416.1 614 T
(siz) 476.84 614 T
(e_map:) 491.33 614 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(rec_length.NE.send_length on this_pe) 72 600 T
(.) 275.27 600 T
(\325 \051) 277.4 600 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! W) 72 586 T
(ARNING: THERE IS REAL CHANCE OF HEAP FRA) 89.4 586 T
(GMENT) 369.76 586 T
(A) 411.65 586 T
(TION HERE>>>) 418.21 586 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   allocate\050rec_data\050rec_length\051\051) 72 572 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   allocate\050r) 72 558 T
(lon2\050n) 131.53 558 T
(umq\0501, from_pe\051,2\051, r) 164.76 558 T
(lat2\050n) 278.3 558 T
(umq\0502, from_pe\051,2\051\051) 308.2 558 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   allocate\050 r) 72 544 T
(mask2\050n) 134.99 544 T
(umq\0501, from_pe\051, n) 180.88 544 T
(umq\0502, from_pe\051\051\051) 282.79 544 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   call mpp_sync\050\051) 72 530 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(call mpp_tr) 82.01 516 T
(ansmit\050 send_data, rec_length, ALL_PES) 140.57 516 T
(, rec_data, rec_length, from_pe \051) 360.44 516 T
0 1 1 0 1 0 0 1 K
(! Load the remote side2 pe\325) 72 502 T
(s lon, lat and mask data) 216.82 502 T
0 0 0 1 0 0 0 1 K
(   r) 72 488 T
(lon2\050:, 1\051 = rec_data\0501:n) 86.18 488 T
(umq\0501, from_pe\051\051) 214.46 488 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   r) 72 474 T
(lon2\050:, 2\051 = rec_data\050n) 86.18 474 T
(umq\0501, from_pe\051 + 1 : 2*n) 204.46 474 T
(umq\0501, from_pe\051\051) 341.4 474 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   r) 72 460 T
(lat2\050:, 1\051 = rec_data\0502*n) 86.18 460 T
(umq\0501, from_pe\051 + 1 : 2*n) 212.46 460 T
(umq\0501, from_pe\051 + &) 349.4 460 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(        n) 72 446 T
(umq\0502, from_pe\051\051) 105.24 446 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   r) 72 432 T
(lat2\050:, 2\051 = rec_data\0502*n) 86.18 432 T
(umq\0501, from_pe\051 + n) 212.46 432 T
(umq\0502, from_pe\051 + 1 : &) 321.38 432 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(        2*n) 72 418 T
(umq\0501, from_pe\051 + 2*n) 116.58 418 T
(umq\0502, from_pe\051\051) 236.84 418 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Load the logical mask arr) 72 404 T
(a) 212.6 404 T
(y; set to .f) 218.92 404 T
(alse) 270.59 404 T
(. toggle if tr) 292.42 404 T
(ue) 351.96 404 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   r) 72 390 T
(mask2 = .f) 86.3 390 T
(alse) 141.64 390 T
(.) 163.46 390 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   inde) 72 376 T
(x = 2*n) 104.33 376 T
(umq\0501, from_pe\051 + 2*n) 141.9 376 T
(umq\0502, from_pe\051 + 1) 262.16 376 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   do j = 1, n) 72 362 T
(umq\0501, from_pe\051) 134.93 362 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(      do k = 1, n) 72 348 T
(umq\0502, from_pe\051) 148.27 348 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         if\050rec_data\050inde) 72 334 T
(x\051 == 1.0\051 r) 185.03 334 T
(mask2\050j, k\051 = .tr) 244.02 334 T
(ue) 327.22 334 T
(.) 340.38 334 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         inde) 72 320 T
(x = inde) 124.34 320 T
(x + 1) 166.34 320 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(      end do) 72 306 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   end do) 72 292 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   if\050inde) 72 278 T
(x/=rec_length + 1\051 call f) 114.32 278 T
(atal_error\050\325) 238.69 278 T
(siz) 296.1 278 T
(e_map:inconsistnt inde) 310.58 278 T
(x\325\051) 432.95 278 T
0 1 1 0 1 0 0 1 K
(! Compute the o) 72 250 T
(v) 157.2 250 T
(er) 162.9 250 T
(laps) 173.75 250 T
0 0 0 1 0 0 0 1 K
(   if\050call_siz) 72 236 T
(e\051 then) 131.16 236 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(       call one_lon_lat_siz) 72 222 T
(e\050b) 199.88 222 T
(lon1, b) 216.98 222 T
(lat1, r) 252.77 222 T
(lon2, r) 282.96 222 T
(lat2, mask1, r) 316.49 222 T
(mask2, &) 388.81 222 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(            n) 72 208 T
(um_par) 118.58 208 T
(t1, n) 159.74 208 T
(um_par) 182.98 208 T
(t2, bd_map\051) 224.14 208 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   else) 72 194 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(       call one_lon_lat_map\050b) 72 180 T
(lon1, b) 219.17 180 T
(lat1, r) 254.95 180 T
(lon2, r) 285.14 180 T
(lat2, mask1, r) 318.67 180 T
(mask2, &) 391 180 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(            n) 72 166 T
(um_par) 118.58 166 T
(t1, n) 159.74 166 T
(um_par) 182.98 166 T
(t2, bd_map) 224.14 166 T
(, bd_map2, this_pe) 283.75 166 T
(, from_pe\051) 385.63 166 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   endif) 72 152 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   deallocate\050rec_data, r) 72 138 T
(lon2, r) 198.24 138 T
(lat2, r) 231.77 138 T
(mask2\051) 262.08 138 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end do) 72 124 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "17" 17
%%Page: "18" 18
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 18) 396 36 T
0 1 1 0 1 0 0 1 K
153.32 696.8 72 696.8 2 L
0.6 H
0 Z
N
0 12 Q
(one_lon_lat_size) 72 698 T
0 0 0 1 0 0 0 1 K
( \336nds the number of e) 153.32 698 T
(xchange cells and increments counts in the) 258.13 698 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(boundary map and e) 72 684 T
(xchange map) 169.46 684 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
1 F
(! Number of e) 72 656 T
(xchange g) 144.34 656 T
(r) 199.58 656 T
(id cells needed to handle par) 203.76 656 T
(titions f) 357.66 656 T
(or each o) 395.32 656 T
(v) 445.16 656 T
(er) 450.86 656 T
(lap) 461.71 656 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(np = n) 72 642 T
(um_par) 105.58 642 T
(t1 * n) 146.74 642 T
(um_par) 174.64 642 T
(t2) 215.8 642 T
0 1 1 0 1 0 0 1 K
(! Find all longitude o) 72 614 T
(v) 179.21 614 T
(er) 184.91 614 T
(lap pairs) 195.76 614 T
0 0 0 1 0 0 0 1 K
(lon_ne) 72 600 T
(xt = 0) 107.66 600 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(do i1 = 1, siz) 72 586 T
(e\050b) 139.52 586 T
(lon1, 1\051) 156.62 586 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   lon1 = b) 72 572 T
(lon1\050i1, 1:2\051) 124.8 572 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   do i2 = 1, siz) 72 558 T
(e\050b) 149.53 558 T
(lon2, 1\051) 166.63 558 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(      lon2 = b) 72 544 T
(lon2\050i2, 1:2\051) 134.81 544 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(      if\050lon_o) 72 530 T
(v) 131.18 530 T
(er) 136.88 530 T
(lap\050lon1, lon2\051\051 then) 147.73 530 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         lon_ne) 72 516 T
(xt = lon_ne) 137.69 516 T
(xt + 1) 196.37 516 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         if\050lon_ne) 72 502 T
(xt > siz) 147.68 502 T
(e\050lon_o) 185.18 502 T
(v\051\051 &) 225.02 502 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(            call f) 72 488 T
(atal_error\050\325one_lon_lat_siz) 136.34 488 T
(e: lon_ne) 277.55 488 T
(xt too big\325\051) 326.56 488 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         lon_o) 72 474 T
(v\050lon_ne) 131.2 474 T
(xt, 1\051 = i1) 176.86 474 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         lon_o) 72 460 T
(v\050lon_ne) 131.2 460 T
(xt, 2\051 = i2) 176.86 460 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(       end if) 72 446 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   end do) 72 432 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end do) 72 418 T
0 1 1 0 1 0 0 1 K
(! Find all latitude o) 72 390 T
(v) 169.2 390 T
(er) 174.9 390 T
(lap pairs) 185.75 390 T
0 0 0 1 0 0 0 1 K
(do j1 = 1, siz) 72 376 T
(e\050b) 139.52 376 T
(lat1, 1\051) 156.62 376 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   lat1 = b) 72 362 T
(lat1\050j1, 1:2\051) 121.46 362 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   do j2 = 1, siz) 72 348 T
(e\050b) 149.53 348 T
(lat2, 1\051) 166.63 348 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(      lat2 = b) 72 334 T
(lat2\050j2, 1:2\051) 131.47 334 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(      if\050lat_o) 72 320 T
(v) 127.85 320 T
(er) 133.55 320 T
(lap\050lat1, lat2\051\051 then) 144.4 320 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Compute the latitudinal area of the e) 72 306 T
(xchange g) 271.75 306 T
(r) 327 306 T
(id cell) 331.18 306 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(do i = 1, lon_ne) 102.02 292 T
(xt) 184.06 292 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(            i1 = lon_o) 72 278 T
(v\050i, 1\051) 164.22 278 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(            i2 = lon_o) 72 264 T
(v\050i, 2\051) 164.22 264 T
0 1 1 0 1 0 0 1 K
(            if\050mask1\050i1, j1\051 .and. mask2\050i2, j2\051\051 then) 72 250 T
(!) 72 236 T
(Increment) 77.44 236 T
(space) 132.9 236 T
(in) 167.03 236 T
(e) 178.48 236 T
(xchange) 184.79 236 T
(map) 232.26 236 T
(and) 257.7 236 T
(boundar) 279.83 236 T
(y) 324.22 236 T
(map) 332.33 236 T
(f) 357.77 236 T
(or) 360.75 236 T
(side) 373.53 236 T
(1) 397.64 236 T
(boundar) 406.42 236 T
(y) 450.81 236 T
(map) 458.92 236 T
(calls) 484.37 236 T
(map%max_siz) 72 222 T
(e = map%max_siz) 149.83 222 T
(e + np) 248.02 222 T
(               bd_map%total_target_cells = bd_map%total_target_cells + np) 72 208 T
0 0 0 1 0 0 0 1 K
(            endif) 72 194 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         end do) 72 180 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(      end if) 72 166 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   end do) 72 152 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end do) 72 138 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 F
(Loop through each longitude) 381 315.75 T
(o) 381 303.75 T
(v) 386.82 303.75 T
(erlap.) 392.64 303.75 T
372.75 288.75 526.5 332.25 R
0.5 H
2 Z
N
0 1 1 0 1 0 0 1 K
(If this cell e) 219.75 180.75 T
(xists in both models, increment) 276.56 180.75 T
(number of e) 219.75 168.75 T
(xchange cells by product of) 277.55 168.75 T
(number of partitions in component models.) 219.75 156.75 T
213 144 443.25 195 R
N
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "18" 18
%%Page: "19" 19
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 19) 396 36 T
0 1 1 0 1 0 0 1 K
155.33 696.8 72 696.8 2 L
0.6 H
0 Z
N
0 12 Q
(one_lon_lat_map) 72 698 T
0 0 0 1 0 0 0 1 K
( e) 155.33 698 T
(xcatly repeats grid o) 163.48 698 T
(v) 260.94 698 T
(erlap computations, b) 266.76 698 T
(ut storage has no) 370.18 698 T
(w been allocated,) 450.86 698 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(so it can set up much of the data structure.) 72 684 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
1 F
(      do j2 = 1, siz) 72 656 T
(e\050b) 159.54 656 T
(lat2, 1\051) 176.64 656 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         lat2 = b) 72 642 T
(lat2\050j2, 1:2\051) 141.48 642 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         if\050lat_o) 72 628 T
(v) 137.86 628 T
(er) 143.56 628 T
(lap\050lat1, lat2\051\051 then) 154.4 628 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Compute the latitudinal area of the e) 72 614 T
(xchange g) 271.75 614 T
(r) 327 614 T
(id cell) 331.18 614 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(            lat_area =  sin\050min\050lat1\0502\051, lat2\0502\051\051\051 -sin\050max\050lat1\0501\051, lat2\0501\051\051\051) 72 600 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(            if\050mask1\050i1, j1\051 .and. mask2\050i2, j2\051\051 then) 72 586 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(! Compute the area of the e) 72 572 T
(xchange g) 217.73 572 T
(r) 272.98 572 T
(id cell) 277.15 572 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(               area = lon_o) 72 558 T
(v_area\050i\051 * lat_area) 188.9 558 T
0 1 1 0 1 0 0 1 K
(! Loop through total n) 72 544 T
(umber of par) 185.29 544 T
(titions and load map) 253.8 544 T
0 0 0 1 0 0 0 1 K
(               do k = 1, n) 72 530 T
(um_par) 178.3 530 T
(t1) 219.46 530 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                  do m = 1, n) 72 516 T
(um_par) 192.3 516 T
(t2) 233.46 516 T
0 1 1 0 1 0 0 1 K
(! Increment n) 72 502 T
(umber of e) 141.91 502 T
(xchange cells set up in this map) 198.91 502 T
0 0 0 1 0 0 0 1 K
(                     map%siz) 72 488 T
(e = map%siz) 190.55 488 T
(e + 1) 259.39 488 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Violating the f) 72 474 T
(ollo) 151.02 474 T
(wing error w) 169.51 474 T
(ould indicate ser) 234.73 474 T
(ious prob) 322.28 474 T
(lems in setup) 371.4 474 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                     if\050map%siz) 72 460 T
(e > map%max_siz) 200.54 460 T
(e\051 &) 298.73 460 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                        call f) 72 446 T
(atal_error\050\325one_lon_lat_map: Max map_siz) 176.38 446 T
(e e) 403.61 446 T
(xceeded\325\051) 419.93 446 T
0 1 1 0 1 0 0 1 K
(! Initializ) 72 432 T
(e area and total area f) 115.16 432 T
(or this e) 232.21 432 T
(xchange cell) 274.54 432 T
0 0 0 1 0 0 0 1 K
(                     map%total_area\050map%siz) 72 418 T
(e\051 = area) 281.92 418 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                     map%area\050map%siz) 72 404 T
(e\051 = area) 252.56 404 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Initializ) 72 390 T
(ed v) 115.16 390 T
(alue f) 137.54 390 T
(or fr) 166.54 390 T
(actional areas is 1, oka) 187.75 390 T
(y f) 310.12 390 T
(or no par) 322.43 390 T
(titions) 370.93 390 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                     map%fr) 72 376 T
(ac_area\050map%siz) 183.28 376 T
(e) 279.12 376 T
(, :\051 = 1.0) 285.61 376 T
0 1 1 0 1 0 0 1 K
(! Set model ids f) 72 362 T
(or the tw) 157.68 362 T
(o bounding models) 203.58 362 T
0 0 0 1 0 0 0 1 K
(                     map%bd_map_id\050map%siz) 72 348 T
(e) 287.92 348 T
(, side\051 = bd_map%id) 294.41 348 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                     map%bd_map_id\050map%siz) 72 334 T
(e) 287.92 334 T
(, other_side\051 = bd_map2%id) 294.41 334 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(! Initializ) 72 320 T
(e e) 115.16 320 T
(xchange g) 131.48 320 T
(r) 186.73 320 T
(id bac) 190.91 320 T
(k pointers) 222.68 320 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                     map%x\050map%siz) 72 306 T
(e) 234.55 306 T
(, side\051 = i1) 241.04 306 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                     map%x\050map%siz) 72 292 T
(e) 234.55 292 T
(, other_side\051 = i2) 241.04 292 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                     map%y\050map%siz) 72 278 T
(e) 234.55 278 T
(, side\051 = j1) 241.04 278 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                     map%y\050map%siz) 72 264 T
(e) 234.55 264 T
(, other_side\051 = j2) 241.04 264 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                     map%par) 72 250 T
(t\050map%siz) 193.88 250 T
(e) 249.71 250 T
(, side\051 = k) 256.2 250 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                     map%par) 72 236 T
(t\050map%siz) 193.88 236 T
(e) 249.71 236 T
(, other_side\051 = m) 256.2 236 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                     map%pe\050map%siz) 72 222 T
(e) 241.9 222 T
(, side\051 = this_pe) 248.39 222 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                     map%pe\050map%siz) 72 208 T
(e) 241.9 208 T
(, other_side\051 = other_pe) 248.39 208 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(                  end do) 72 194 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(               end do) 72 180 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(            end if) 72 166 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         end if) 72 152 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(      end do) 72 138 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 F
(This sets up all the data) 389.25 306.75 T
(structure in the e) 389.25 294.75 T
(xchange) 469.39 294.75 T
(grid map b) 389.25 282.75 T
(ut does NO) 441.01 282.75 T
(T) 495.19 282.75 T
(set up the boundary map.) 389.25 270.75 T
(This will be done later) 389.25 258.75 T
(to allo) 389.25 246.75 T
(w for optimization.) 419.29 246.75 T
377.25 231.75 522 318 R
0.5 H
2 Z
N
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "19" 19
%%Page: "20" 20
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 20) 396 36 T
0 1 1 0 1 0 0 1 K
147.32 696.8 72 696.8 2 L
0.6 H
0 Z
N
0 12 Q
(complete_side1) 72 698 T
0 0 0 1 0 0 0 1 K
(initializes) 149.95 698 T
(the) 199.24 698 T
(boundary) 216.52 698 T
(map) 264.47 698 T
(for) 287.75 698 T
(side1) 304.37 698 T
(models) 332.32 698 T
(by) 369.61 698 T
(getting) 384.23 698 T
(the) 420.19 698 T
(information) 437.48 698 T
(from) 496.76 698 T
(the) 522.71 698 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(associated e) 72 684 T
(xchange_map) 129.47 684 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
1 F
(! Get map pointer) 72 656 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(map => bd_map%e) 72 642 T
(x) 176.36 642 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! CODE SECTION ADDED FOR NEW IMPLEMENT) 72 614 T
(A) 347.26 614 T
(TION, 29 FEB) 353.82 614 T
(., 2000 ----------------) 428.94 614 T
0 1 1 0 1 0 0 1 K
(do i = 1, bd_map%total_target_cells) 72 600 T
(   bd_map%x\050i\051 = map%x\050i, 1\051) 72 586 T
(   bd_map%y\050i\051 = map%y\050i, 1\051) 72 572 T
(   bd_map%par) 72 558 T
(t\050i\051 = map%par) 153.85 558 T
(t\050i, 1\051) 233.35 558 T
(   bd_map%e) 72 544 T
(x_cell\050i\051 = i) 142.34 544 T
(end do) 72 530 T
0 0 0 1 0 0 0 1 K
(! On side 1 pe) 72 502 T
(, target e) 146.53 502 T
(xchange cells are ALL on this pe) 193.54 502 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(this_pe = mpp_pe\050\051) 72 488 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(bd_map%star) 72 474 T
(t = 0) 146.51 474 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(bd_map%len = 0) 72 460 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(bd_map%star) 72 446 T
(t\050this_pe\051 = 1) 146.51 446 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(bd_map%len\050this_pe\051 = bd_map%total_target_cells) 72 432 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Loop through each e) 72 404 T
(xchange g) 188.39 404 T
(r) 243.64 404 T
(id cell; \336) 247.81 404 T
(nd out what pe has the) 291.16 404 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! target component model cell f) 72 390 T
(or this side of the e) 235.72 390 T
(xchange g) 336.74 390 T
(r) 391.99 390 T
(id,) 396.17 390 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! and increment a counter of ho) 72 376 T
(w man) 237.91 376 T
(y cells on each pe) 273.07 376 T
(.) 368.94 376 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(side = 1) 72 362 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(n) 72 334 T
(um_pes = mpp_npes\050\051) 78.55 334 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(allocate\050bd_map%e) 72 320 T
(x_cells_per_pe\0500:n) 177.68 320 T
(um_pes - 1\051\051) 278.94 320 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(bd_map%e) 72 306 T
(x_cells_per_pe = 0) 132.34 306 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(do i = 1, map%siz) 72 292 T
(e) 166.86 292 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(   if\050map%bd_map_id\050i, side\051 == bd_map%id\051 &) 72 278 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(   bd_map%e) 72 264 T
(x_cells_per_pe\050map%pe\050i, side\051\051 = bd_map%e) 142.34 264 T
(x_cells_per_pe\050map%pe\050i,) 391.74 264 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(side\051\051 + 1) 72 250 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(end do) 72 236 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
0 F
(Just loop through all the cells) 339 585.75 T
(and look at info in e) 339 573.75 T
(xchange map) 435.14 573.75 T
(to indicate which component) 339 561.75 T
(model cell corresponds.) 339 549.75 T
329.25 536.25 507 600 R
0.5 H
2 Z
N
1 1 0 0 0 0 1 1 K
(F) 246 219.75 T
(or side1, should be able to) 252.49 219.75 T
(use f) 246 207.75 T
(act that all e) 268.87 207.75 T
(xchange cells) 327.01 207.75 T
(are on same PE. This just) 246 195.75 T
(v) 246 183.75 T
(eri\336es the data structure.) 251.82 183.75 T
237 168.75 422.25 234.75 R
N
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "20" 20
%%Page: "21" 21
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 21) 396 36 T
0 1 1 0 1 0 0 1 K
225.31 710.8 72 710.8 2 L
0.6 H
0 Z
N
0 12 Q
(complete_side2_boundary_map) 72 712 T
0 0 0 1 0 0 0 1 K
( also needs to get information from e) 225.31 712 T
(xchange grid, b) 402.11 712 T
(ut this no) 476.18 712 T
(w) 520.56 712 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(requires communication.) 72 698 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
2 F
(!) 72 670 T
(Loop) 77.28 670 T
(through) 101.72 670 T
(each) 137.64 670 T
(e) 161.52 670 T
(xchange) 166.63 670 T
(g) 206.38 670 T
(r) 211.73 670 T
(id) 215.19 670 T
(cell;) 225.39 670 T
(\336) 245.43 670 T
(nd) 250.35 670 T
(out) 263.84 670 T
(what) 280.07 670 T
(pe) 303.4 670 T
(has) 316.89 670 T
(the) 335.3 670 T
(target) 351.53 670 T
(component) 379.24 670 T
(model) 430.47 670 T
(cell) 459.81 670 T
(f) 477.12 670 T
(or) 479.5 670 T
(this) 490.79 670 T
(side) 508.65 670 T
(of) 529.24 670 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(the e) 72 656 T
(xchange g) 93.53 656 T
(r) 138.82 656 T
(id, and increment a counter of ho) 142.27 656 T
(w man) 285.96 656 T
(y cells on each pe) 314.76 656 T
(.) 393.35 656 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
1 F
(allocate\050bd_map%e) 72 628 T
(x_cells_per_pe\0500:n) 177.68 628 T
(um_pes - 1\051\051) 278.94 628 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(bd_map%e) 72 614 T
(x_cells_per_pe = 0) 132.34 614 T
0 1 1 0 1 0 0 1 K
(do i = 1, e) 72 600 T
(x_map%siz) 124.68 600 T
(e) 185.84 600 T
(   if\050e) 72 586 T
(x_map%bd_map_id\050i, side\051 == bd_map%id\051 &) 98.32 586 T
(   bd_map%e) 72 572 T
(x_cells_per_pe\050e) 142.34 572 T
(x_map%pe\050i, side\051\051 =) 233.35 572 T
(bd_map%e) 72 558 T
(x_cells_per_pe\050e) 132.34 558 T
(x_map%pe\050i, side\051\051 + 1) 223.34 558 T
(end do) 72 544 T
(! Get n) 72 516 T
(umber of cells this pe\325) 107.9 516 T
(s e) 223.34 516 T
(xchange g) 238.99 516 T
(r) 294.24 516 T
(id sends to all other pes) 298.42 516 T
(send_count = e) 72 502 T
(x_cells_per_pe\050bd_map) 154.03 502 T
(, n) 281.66 502 T
(um_pes\051) 294.89 502 T
0 0 0 1 0 0 0 1 K
(! J) 72 474 T
(ust cop) 84.43 474 T
(y f) 122.76 474 T
(or inf) 135.07 474 T
(o on the same pe) 161.39 474 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(receiv) 72 460 T
(e_count\050this_pe\051 = send_count\050this_pe\051) 103.7 460 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(! Loop through to send inf) 72 432 T
(o from each pe to all other pes in tur) 207.73 432 T
(n) 400.13 432 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(do pe_dist = 1,n) 72 418 T
(um_pes-1) 157.61 418 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   to_pe = mod\050 this_pe+pe_dist, n) 72 404 T
(um_pes \051) 253.99 404 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   from_pe = mod\050 this_pe+n) 72 390 T
(um_pes-pe_dist, n) 222.62 390 T
(um_pes \051) 321.22 390 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
(call mpp_tr) 82.01 376 T
(ansmit\050 send_count\050to_pe\051, 1, to_pe) 140.57 376 T
(, receiv) 333.16 376 T
(e_count\050from_pe\051, 1, from_pe \051) 371.53 376 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end do) 72 362 T
0 1 1 0 1 0 0 1 K
(! Compute the total n) 72 334 T
(umber of target cells f) 183.28 334 T
(or this boundar) 298.3 334 T
(y map) 378.7 334 T
0 0 0 1 0 0 0 1 K
(total_target_cells = sum\050receiv) 72 320 T
(e_count\051) 234.76 320 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(bd_map%total_target_cells = total_target_cells) 72 306 T
0 1 1 0 1 0 0 1 K
(! Allocate b) 72 292 T
(uff) 131.12 292 T
(ers plus tempor) 144.11 292 T
(ar) 226.68 292 T
(y stor) 237.71 292 T
(age f) 266.93 292 T
(or sor) 293.26 292 T
(t) 324.41 292 T
0 0 0 1 0 0 0 1 K
(allocate\050e) 72 278 T
(x_pe\050total_target_cells\051, x\050total_target_cells\051, &) 123.66 278 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   y\050total_target_cells\051, e) 72 264 T
(x_cell\050total_target_cells\051, par) 199.69 264 T
(t\050total_target_cells\051\051) 353.56 264 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Stor) 72 250 T
(age allocation) 100.56 250 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(allocate\050bd_map%x\050bd_map%total_target_cells\051, &) 72 236 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(bd_map%y\050bd_map%total_target_cells\051,bd_map%par) 77.43 222 T
(t\050bd_map%total_target_cells\051,) 365.36 222 T
(&) 526.57 222 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(bd_map%e) 72 208 T
(x_cell\050bd_map%total_target_cells\051\051) 132.34 208 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Load up inf) 72 180 T
(or) 137.69 180 T
(mation on where the target e) 148.66 180 T
(xchange cells hang out) 301.04 180 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(do i = 0, n) 72 166 T
(um_pes - 1) 124.92 166 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(   bd_map%len\050i\051 = receiv) 72 152 T
(e_count\050i\051) 208.08 152 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(end do) 72 138 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(bd_map%star) 72 124 T
(t\0500\051 = 1) 146.51 124 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(do i = 1, n) 72 110 T
(um_pes - 1) 124.92 110 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(   bd_map%star) 72 96 T
(t\050i\051 = bd_map%star) 156.52 96 T
(t\050i - 1\051 + bd_map%len\050i - 1\051) 258.7 96 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(end do) 72 82 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
0 F
(Look at e) 384.75 624 T
(xchange map on this) 429.89 624 T
(pe. Get count of ho) 384.75 612 T
(w man) 476.77 612 T
(y) 508.92 612 T
(cells it sends to model for) 384.75 600 T
(this boundary map on each) 384.75 588 T
(other pe.) 384.75 576 T
374.25 559.5 534 638.25 R
0.5 H
2 Z
N
1 1 0 0 0 0 1 1 K
(Exchange this count) 429 448.5 T
(with all other PEs.) 429 436.5 T
(Recei) 429 424.5 T
(v) 456.03 424.5 T
(e is ho) 461.85 424.5 T
(w man) 492.88 424.5 T
(y) 525.03 424.5 T
(I\325) 429 412.5 T
(ll get from each) 436.87 412.5 T
(other PE.) 429 400.5 T
421.5 390.75 538.5 459.75 R
N
(Set up count and length) 418.5 159.75 T
(to allo) 418.5 147.75 T
(w boundary cells) 448.54 147.75 T
(to be stored in blocks) 418.5 135.75 T
(corresponding to each) 418.5 123.75 T
(remote PE.) 418.5 111.75 T
411 102.75 538.5 169.5 R
N
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "21" 21
%%Page: "22" 22
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 22) 396 36 T
0 1 1 0 1 0 0 1 K
259.97 710.8 72 710.8 2 L
0.6 H
0 Z
N
0 12 Q
(complete_side2_boundary_map \050cont.\051) 72 712 T
1 F
(! Send to each pe the n) 72 684 T
(umber a quadr) 195.97 684 T
(uplet of boundar) 274.19 684 T
(y g) 361.27 684 T
(r) 377.16 684 T
(id x, y) 381.34 684 T
(, par) 411.48 684 T
(t and) 435.97 684 T
(! corresponding e) 72 670 T
(xchange g) 164.35 670 T
(r) 219.6 670 T
(id cell n) 223.78 670 T
(umber) 264.34 670 T
0 0 0 1 0 0 0 1 K
(! Loop through to send data to each processor in tur) 72 656 T
(n) 347.8 656 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Currently sending to self also , ma) 72 642 T
(y w) 259.72 642 T
(ant to optimiz) 277.54 642 T
(e this) 348.72 642 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! pe loop states that this pe is tr) 72 628 T
(ansmitting to all others) 237.97 628 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(do from_pe = 0, n) 72 614 T
(um_pes - 1) 166.27 614 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Send to all pes if it\325) 72 586 T
(s m) 178.79 586 T
(y_pe\325) 197.94 586 T
(s tur) 226.02 586 T
(n) 249.66 586 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   if\050from_pe == this_pe\051 then) 72 572 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(      do to_pe = 0, n) 72 558 T
(um_pes - 1) 172.3 558 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         allocate\050send_x\050send_count\050to_pe\051\051, send_y\050send_count\050to_pe\051\051, &) 72 544 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(            send_par) 72 530 T
(t\050send_count\050to_pe\051\051, send_e) 162.54 530 T
(x_cell\050send_count\050to_pe\051\051\051) 319.6 530 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         inde) 72 516 T
(x = 1) 124.34 516 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Load up the tr) 72 502 T
(anmsit b) 152.6 502 T
(uff) 197.71 502 T
(ers f) 210.7 502 T
(or the current target pe) 233.68 502 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         do i = 1, e) 72 488 T
(x_map%siz) 154.7 488 T
(e) 215.87 488 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(            if\050e) 72 474 T
(x_map%pe\050i, bd_map%side\051 == to_pe .and. &) 128.34 474 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(               e) 72 460 T
(x_map%bd_map_id\050i, bd_map%side\051 == bd_map%id\051 then) 128.35 460 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(               send_x\050inde) 72 446 T
(x\051 = e) 187.04 446 T
(x_map%x\050i, bd_map%side\051) 217.03 446 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(               send_y\050inde) 72 432 T
(x\051 = e) 187.04 432 T
(x_map%y\050i, bd_map%side\051) 217.03 432 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(               send_par) 72 418 T
(t\050inde) 172.55 418 T
(x\051 = e) 202.2 418 T
(x_map%par) 232.19 418 T
(t\050i, bd_map%side\051) 296.69 418 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(               send_e) 72 404 T
(x_cell\050inde) 161.04 404 T
(x\051 = i) 218.03 404 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(               inde) 72 390 T
(x = inde) 144.36 390 T
(x + 1) 186.36 390 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(            end if) 72 376 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         end do) 72 362 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(!) 72 348 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(! THIS MUST A) 72 334 T
(GGREGA) 154.32 334 T
(TE AND B) 205.56 334 T
(UFFER) 260.78 334 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(         call complete_bd_tr) 72 320 T
(ansmit\050to_pe) 205.94 320 T
(, send_x, send_y) 275.12 320 T
(, send_par) 364.64 320 T
(t, &) 421.82 320 T
0 1 1 0 1 0 0 1 K
1 1 0 0 0 0 1 1 K
(            send_e) 72 306 T
(x_cell\051) 151.03 306 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         deallocate\050send_x, send_y) 72 292 T
(, send_par) 243.56 292 T
(t, send_e) 300.74 292 T
(x_cell\051) 349.75 292 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(      end do) 72 278 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   end if) 72 264 T
0 1 1 0 1 0 0 1 K
(! Ev) 72 236 T
(er) 92.38 236 T
(y pe is receiving a message from this one \050self-tr) 103.4 236 T
(ansmit f) 361.37 236 T
(or no) 403.02 236 T
(w\051) 430.19 236 T
(   star) 72 222 T
(t = end + 1) 102.49 222 T
(   end = end + receiv) 72 208 T
(e_count\050from_pe\051) 181.1 208 T
(   call complete_bd_receiv) 72 194 T
(e\050from_pe) 210.42 194 T
(, x\050star) 264.92 194 T
(t:end\051, y\050star) 302.08 194 T
(t:end\051, &) 369.91 194 T
(      par) 72 180 T
(t\050star) 109.84 180 T
(t:end\051, e) 137.65 180 T
(x_cell\050star) 181.32 180 T
(t:end\051\051) 236.47 180 T
0 0 0 1 0 0 0 1 K
(   call mpp_sync) 72 166 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! T) 72 152 T
(ak) 84.56 152 T
(e care of pe n) 97 152 T
(umber) 170.26 152 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   e) 72 138 T
(x_pe\050star) 88.32 138 T
(t:end\051 = from_pe) 138.82 138 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end do) 72 124 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
0 F
(Quadruplets from each PE are) 363 164.25 T
(stored in contiguous block of) 363 152.25 T
(storage set up and inde) 363 140.25 T
(x) 472.8 140.25 T
(ed) 478.62 140.25 T
(pre) 363 128.25 T
(viously) 378.02 128.25 T
(.) 412.58 128.25 T
352.5 120 518.25 178.5 R
0.5 H
2 Z
N
1 1 0 0 0 0 1 1 K
(complete_bd_transmit) 401.25 396.75 T
(lumps these four \336elds) 401.25 384.75 T
(together and transmits) 401.25 372.75 T
(them as single message.) 401.25 360.75 T
390.75 344.25 534.75 406.5 R
N
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "22" 22
%%Page: "23" 23
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
0 10 Q
0 X
(exchange_grid details,) 72 36 T
(March 8, 2001) 216 36 T
(Slide 23) 396 36 T
0 1 1 0 1 0 0 1 K
207.1 710.8 72 710.8 2 L
0.6 H
0 Z
N
1 12 Q
(complete_side2_boundar) 72 712 T
280.45 710.8 207.1 710.8 2 L
N
(y_map \050cont.\051) 207.1 712 T
0 0 0 1 0 0 0 1 K
(! Need to g) 72 684 T
(r) 130.58 684 T
(ab stuff in order b) 134.46 684 T
(y pe; NO NEED T) 227.6 684 T
(O SOR) 321.82 684 T
(T BY O) 360.13 684 T
(THER KEYS???) 399 684 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(pe_inde) 72 670 T
(x = 0) 114.34 670 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(pe_inde) 72 656 T
(x\0500 : n) 114.34 656 T
(um_pes - 1\051 = bd_map%star) 147.56 656 T
(t\0500 : n) 299.77 656 T
(um_pes - 1\051) 330.34 656 T
0 1 1 0 1 0 0 1 K
(do i = 1, total_target_cells) 72 628 T
(   ipe = e) 72 614 T
(x_pe\050i\051) 118.01 614 T
(   inde) 72 600 T
(x = pe_inde) 104.33 600 T
(x\050ipe\051) 166.34 600 T
(   pe_inde) 72 586 T
(x\050ipe\051 = pe_inde) 124.34 586 T
(x\050ipe\051 + 1) 210.36 586 T
(   bd_map%x\050inde) 72 572 T
(x\051 = x\050i\051) 168.35 572 T
(   bd_map%y\050inde) 72 558 T
(x\051 = y\050i\051) 168.35 558 T
(   bd_map%par) 72 544 T
(t\050inde) 153.85 544 T
(x\051 = par) 183.5 544 T
(t\050i\051) 225 544 T
(   bd_map%e) 72 530 T
(x_cell\050inde) 142.34 530 T
(x\051 = e) 199.33 530 T
(x_cell\050i\051) 229.32 530 T
(end do) 72 516 T
1 1 0 0 0 0 1 1 K
2 F
(! Bloc) 72 488 T
(k f) 96.37 488 T
(or enhancing get ef\336) 106.4 488 T
(ciency) 195.58 488 T
(, inde) 222.26 488 T
(x to e) 245.98 488 T
(xchange) 269.69 488 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! First, \336) 72 474 T
(gure out ho) 106.99 474 T
(w man) 156.6 474 T
(y e) 185.4 474 T
(xchange cells on this pe go each remote pe) 198.17 474 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(send_count = e) 72 460 T
(x_cells_per_pe\050bd_map) 139.21 460 T
(, n) 243.8 460 T
(um_pes\051) 254.63 460 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(bd_map%e) 72 446 T
(x_star) 121.42 446 T
(t\0500\051 = 1) 148.69 446 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(do i = 1, n) 72 432 T
(um_pes - 1) 115.38 432 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   bd_map%e) 72 418 T
(x_star) 129.62 418 T
(t\050i\051 = bd_map%e) 156.9 418 T
(x_star) 229.01 418 T
(t\050i - 1\051 + send_count\050i - 1\051) 256.28 418 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end do) 72 404 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(do i = 0, n) 72 390 T
(um_pes - 1) 115.38 390 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   bd_map%e) 72 376 T
(x_len\050i\051 = send_count\050i\051) 129.62 376 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end do) 72 362 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(total_e) 72 348 T
(x_cells = sum\050send_count\0500:n) 101.18 348 T
(um_pes - 1\051\051) 232.06 348 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(allocate\050bd_map%e) 72 334 T
(x_ind\050total_e) 158.6 334 T
(x_cells\051\051) 214.58 334 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(! Loop through the e) 72 306 T
(xchange g) 159.73 306 T
(r) 205.02 306 T
(id to \336) 208.48 306 T
(nd all the cells that need to go off PE) 234.73 306 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(do to_pe = 0, n) 72 292 T
(um_pes - 1) 137.82 292 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   inde) 72 278 T
(x = bd_map%e) 98.45 278 T
(x_star) 164 278 T
(t\050to_pe\051) 191.28 278 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   do i = 1, e) 72 264 T
(x_map%siz) 123.35 264 T
(e) 173.47 264 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(      if\050e) 72 250 T
(x_map%pe\050i, bd_map%side\051 == to_pe .and. &) 101.72 250 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         e) 72 236 T
(x_map%bd_map_id\050i, bd_map%side\051 == bd_map%id\051 then) 101.74 236 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         bd_map%e) 72 222 T
(x_ind\050inde) 146.04 222 T
(x\051 = i) 191.08 222 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(         inde) 72 208 T
(x = inde) 114.86 208 T
(x + 1) 149.24 208 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(      endif) 72 194 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(   end do) 72 180 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
(end do) 72 166 T
0 1 1 0 1 0 0 1 K
0 0 0 1 0 0 0 1 K
0 1 1 0 1 0 0 1 K
0 F
(No) 320.25 612 T
(w that I ha) 334.61 612 T
(v) 385.36 612 T
(e all the quads that for) 391.18 612 T
(e) 320.25 600 T
(xchange cells corresponding to my) 325.4 600 T
(boundary map cells, need to e) 320.25 588 T
(xtract) 463.38 588 T
(them and stuf) 320.25 576 T
(f v) 385.28 576 T
(alues into appropriate) 397.98 576 T
(block corresponding to PE where) 320.25 564 T
(e) 320.25 552 T
(xchange cell is stored.) 325.4 552 T
308.25 536.25 508.5 627.75 R
0.5 H
2 Z
N
1 1 0 0 0 0 1 1 K
(When doing get, will need) 408.75 476.25 T
(to g) 408.75 464.25 T
(ather all e) 427.03 464.25 T
(xchange) 474.16 464.25 T
(cells that go to each) 408.75 452.25 T
(remote pe and send them) 408.75 440.25 T
(as a group. The) 408.75 428.25 T
(y can\325) 482.55 428.25 T
(t) 511.99 428.25 T
(be stored contiguously) 408.75 416.25 T
(so one has to search to) 408.75 404.25 T
(\336nd them. Here, we do) 408.75 392.25 T
(this search just once and) 408.75 380.25 T
(form a list \050e) 408.75 368.25 T
(x_ind\051 that) 470.23 368.25 T
(has blocks that contain) 408.75 356.25 T
(all the e) 408.75 344.25 T
(xchange cells) 446.56 344.25 T
(stored on this PE that) 408.75 332.25 T
(go to each other PE) 408.75 320.25 T
(\050on side 2\051 in turn.) 408.75 308.25 T
401.25 297 537.75 488.25 R
N
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "23" 23
%%Trailer
FMENDDOCUMENT
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 23
%%DocumentFonts: Times-Roman
%%+ Helvetica-Oblique
%%+ Helvetica-Narrow-Oblique
%%DocumentNeedsFonts: Times-Roman
%%+ Helvetica-Oblique
%%+ Helvetica-Narrow-Oblique
%%DocumentSuppliedFonts:
%%EOF
